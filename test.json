{
    "swagger": "2.0",
    "info": {
      "title": "Akeneo PIM API",
      "version": "1.0.0"
    },
    "host": "demo.akeneo.com",
    "schemes": [
      "http"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/api/rest/v1/products": {
        "get": {
          "summary": "Get list of products",
          "operationId": "get_products",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "required": false,
              "type": "string"
            },
            {
              "name": "scope",
              "in": "query",
              "type": "string",
              "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "locales",
              "in": "query",
              "type": "string",
              "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "attributes",
              "in": "query",
              "type": "string",
              "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "page",
              "x-validation-rules": "One of the following values",
              "enum": [
                "page",
                "search_after"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "default": 1
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "cursor to the first page"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of products in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "default": false,
              "type": "boolean",
              "required": false
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available in the PIM Serenity version.)",
              "default": false,
              "type": "boolean",
              "required": false
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product's quality scores in the response.",
              "default": false,
              "type": "boolean",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "Return products paginated",
              "schema": {
                "title": "Products",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  },
                  {
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "identifier"
                                  ],
                                  "properties": {
                                    "identifier": {
                                      "type": "string",
                                      "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the product is enable",
                                      "default": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "Family code from which the product inherits its attributes and attributes requirements",
                                      "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                                      "default": "null only in the case of a non variant product"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the categories in which the product is classified",
                                      "x-validation-rules": "Each string of the array is equal to an existing category code",
                                      "items": {
                                        "type": "string"
                                      },
                                      "default": []
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "Codes of the groups to which the product belong",
                                      "x-validation-rules": "Each string of the array is equal to an existing group code",
                                      "items": {
                                        "type": "string"
                                      },
                                      "default": []
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                                      "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                                      "default": "null"
                                    },
                                    "values": {
                                      "type": "object",
                                      "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section",
                                      "properties": {
                                        "attributeCode": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "scope": {
                                                "type": "string",
                                                "description": "Channel code of the product value"
                                              },
                                              "locale": {
                                                "type": "string",
                                                "description": "Locale code of the product value"
                                              },
                                              "data": {
                                                "type": "object",
                                                "description": "Product value"
                                              },
                                              "linked_data": {
                                                "type": "object",
                                                "x-read-only": true,
                                                "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                                                "properties": {
                                                  "attribute": {
                                                    "type": "string"
                                                  },
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "labels": {
                                                    "type": "object"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "associations": {
                                      "type": "object",
                                      "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of product identifiers with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                                      "properties": {
                                        "quantifiedAssociationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "products": {
                                              "type": "array",
                                              "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "properties": {
                                        "workflow_status": {
                                          "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                                          "type": "string",
                                          "enum": [
                                            "read_only",
                                            "draft_in_progress",
                                            "proposal_waiting_for_approval",
                                            "working_copy"
                                          ]
                                        }
                                      }
                                    },
                                    "quality_scores": {
                                      "type": "object",
                                      "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                                    }
                                  },
                                  "example": {
                                    "identifier": "top",
                                    "enabled": true,
                                    "family": "tshirt",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "groups": [],
                                    "parent": null,
                                    "values": {
                                      "name": [
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": null
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": null
                                        }
                                      ],
                                      "description": [
                                        {
                                          "data": "Summer top",
                                          "locale": "en_US",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": "tablet"
                                        },
                                        {
                                          "data": "Débardeur pour l'été",
                                          "locale": "fr_FR",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": "tablet"
                                        }
                                      ],
                                      "price": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": [
                                            {
                                              "amount": "15.5",
                                              "currency": "EUR"
                                            },
                                            {
                                              "amount": "15",
                                              "currency": "USD"
                                            }
                                          ]
                                        }
                                      ],
                                      "color": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "black",
                                          "linked_data": {
                                            "attribute": "color",
                                            "code": "black",
                                            "labels": {
                                              "en_US": "Black",
                                              "fr_FR": "Noir"
                                            }
                                          }
                                        }
                                      ],
                                      "size": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "m",
                                          "linked_data": {
                                            "attribute": "size",
                                            "code": "m",
                                            "labels": {
                                              "en_US": "M",
                                              "fr_FR": "M"
                                            }
                                          }
                                        }
                                      ],
                                      "collection": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": [
                                            "winter_2016"
                                          ],
                                          "linked_data": {
                                            "winter_2016": {
                                              "attribute": "collection",
                                              "code": "winter_2016",
                                              "labels": {
                                                "en_US": "Winter 2016",
                                                "fr_FR": "Hiver 2016"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "created": "2016-06-23T18:24:44+02:00",
                                    "updated": "2016-06-25T17:56:12+02:00",
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    },
                                    "quantified_associations": {
                                      "PRODUCT_SET": {
                                        "products": [
                                          {
                                            "identifier": "cap",
                                            "quantity": 2
                                          },
                                          {
                                            "identifier": "shoes",
                                            "quantity": 1
                                          }
                                        ],
                                        "product_models": [
                                          {
                                            "identifier": "model-biker-jacket-leather",
                                            "quantity": 2
                                          }
                                        ]
                                      }
                                    },
                                    "quality_scores": {
                                      "print": {
                                        "en_US": "A",
                                        "fr_FR": "B"
                                      },
                                      "mobile": {
                                        "en_US": "C",
                                        "fr_FR": "D"
                                      },
                                      "ecommerce": {
                                        "en_US": "A",
                                        "fr_FR": "E"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "examples": {
                "_links": {
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/products?page=3&limit=3"
                  },
                  "first": {
                    "href": "https://demo.akeneo.com/api/rest/v1/products?page=1&limit=3"
                  },
                  "previous": {
                    "href": "https://demo.akeneo.com/api/rest/v1/products?page=2&limit=3"
                  },
                  "next": {
                    "href": "https://demo.akeneo.com/api/rest/v1/products?page=4&limit=3"
                  }
                },
                "current_page": 3,
                "_embedded": {
                  "items": [
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/product/top"
                        }
                      },
                      "identifier": "top",
                      "family": "tshirt",
                      "groups": [],
                      "parent": null,
                      "categories": [
                        "summer_collection"
                      ],
                      "enabled": true,
                      "values": {
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": null
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": null
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ],
                        "size": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "m",
                            "linked_data": {
                              "attribute": "size",
                              "code": "m",
                              "labels": {
                                "en_US": "M",
                                "fr_FR": "M"
                              }
                            }
                          }
                        ],
                        "collection": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              "winter_2016"
                            ],
                            "linked_data": {
                              "winter_2016": {
                                "attribute": "collection",
                                "code": "winter_2016",
                                "labels": {
                                  "en_US": "Winter 2016",
                                  "fr_FR": "Hiver 2016"
                                }
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "cap",
                              "quantity": 2
                            },
                            {
                              "identifier": "shoes",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "quality_scores": {
                        "print": {
                          "en_US": "A",
                          "fr_FR": "B"
                        },
                        "mobile": {
                          "en_US": "C",
                          "fr_FR": "D"
                        },
                        "ecommerce": {
                          "en_US": "A",
                          "fr_FR": "E"
                        }
                      }
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/product/cap"
                        }
                      },
                      "identifier": "cap",
                      "family": "caps",
                      "groups": [],
                      "parent": null,
                      "categories": [
                        "summer_collection"
                      ],
                      "enabled": true,
                      "values": {
                        "name": [
                          {
                            "data": "Cap",
                            "locale": "en_US",
                            "scope": null
                          },
                          {
                            "data": "Casquette",
                            "locale": "fr_FR",
                            "scope": null
                          }
                        ],
                        "description": [
                          {
                            "data": "Cap unisex",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Cap unisex",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Casquette unisexe",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Casquette unisexe",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "20",
                                "currency": "EUR"
                              },
                              {
                                "amount": "20",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "black",
                            "linked_data": {
                              "attribute": "color",
                              "code": "black",
                              "labels": {
                                "en_US": "Black",
                                "fr_FR": "Noir"
                              }
                            }
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {},
                      "quality_scores": {
                        "print": {
                          "en_US": "A",
                          "fr_FR": "B"
                        },
                        "mobile": {
                          "en_US": "C",
                          "fr_FR": "D"
                        },
                        "ecommerce": {
                          "en_US": "A",
                          "fr_FR": "E"
                        }
                      }
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/product/sweat"
                        }
                      },
                      "identifier": "sweat",
                      "family": null,
                      "groups": [],
                      "parent": null,
                      "categories": [
                        "winter_collection"
                      ],
                      "enabled": true,
                      "values": {},
                      "created": "2016-06-23T11:24:44+02:00",
                      "updated": "2016-06-23T11:24:44+02:00",
                      "associations": {},
                      "quantified_associations": {},
                      "quality_scores": {}
                    }
                  ]
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new product",
          "operationId": "post_products",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to create a new product. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to create.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                    "default": "null only in the case of a non variant product"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                    "default": "null"
                  },
                  "values": {
                    "type": "object",
                    "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            },
                            "linked_data": {
                              "type": "object",
                              "x-read-only": true,
                              "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  },
                  "quality_scores": {
                    "type": "object",
                    "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "parent": null,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": {
                    "print": {
                      "en_US": "A",
                      "fr_FR": "B"
                    },
                    "mobile": {
                      "en_US": "C",
                      "fr_FR": "D"
                    },
                    "ecommerce": {
                      "en_US": "A",
                      "fr_FR": "E"
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "x-details": "Means that the creation was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Bad request",
              "x-details": "Can be caused by a malformed JSON request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 400,
                "message": "Invalid JSON message received"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "summary": "Update/create several products",
          "operationId": "patch_products",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to update and/or create several products at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Enterprise Edition, since the v2.0, permissions based on your user groups are applied to the products you try to update. It may result in the creation of drafts if you only have edit rights through the product's categories.",
          "x-body-by-line": "Contains several lines, each line is a product in JSON standard format",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "x-examples": {
                  "x-example-1": "{\"identifier\":\"cap\",\"values\":{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing cap\"}]}}",
                  "x-example-2": "{\"identifier\":\"mug\",\"group\":[\"promotion\"]}",
                  "x-example-3": "{\"identifier\":\"tshirt\",\"family\":\"clothes\"}"
                },
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                    "default": "null only in the case of a non variant product"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                    "default": "null"
                  },
                  "values": {
                    "type": "object",
                    "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            },
                            "linked_data": {
                              "type": "object",
                              "x-read-only": true,
                              "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  },
                  "quality_scores": {
                    "type": "object",
                    "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "parent": null,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": {
                    "print": {
                      "en_US": "A",
                      "fr_FR": "B"
                    },
                    "mobile": {
                      "en_US": "C",
                      "fr_FR": "D"
                    },
                    "ecommerce": {
                      "en_US": "A",
                      "fr_FR": "E"
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true,
              "schema": {
                "type": "object",
                "properties": {
                  "line": {
                    "type": "integer",
                    "description": "Line number"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Resource identifier, only filled when the resource is a product"
                  },
                  "code": {
                    "type": "string",
                    "description": "Resource code, only filled when the resource is not a product"
                  },
                  "status_code": {
                    "type": "integer",
                    "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "x-example-1": "{\"line\":1,\"identifier\":\"cap\",\"status_code\":204}",
                "x-example-2": "{\"line\":2,\"identifier\":\"mug\",\"status_code\":422,\"message\":\"Property \"group\" does not exist.\"}",
                "x-example-3": "{\"line\":3,\"identifier\":\"tshirt\",\"status_code\":201}"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "413": {
              "description": "Request Entity Too Large",
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 413,
                "message": "Too many resources to process, 100 is the maximum allowed."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/vnd.akeneo.collection+json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/products/{code}": {
        "get": {
          "summary": "Get a product",
          "operationId": "get_products__code_",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to get the information about a given product. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you request.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            },
            {
              "name": "with_attribute_options",
              "in": "query",
              "description": "Return labels of attribute options in the response. (Only available in the PIM Serenity version.)",
              "default": false,
              "type": "boolean",
              "required": false
            },
            {
              "name": "with_quality_scores",
              "in": "query",
              "description": "Return product's quality scores in the response.",
              "default": false,
              "type": "boolean",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the product in JSON standard format",
              "schema": {
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                    "default": "null only in the case of a non variant product"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                    "default": "null"
                  },
                  "values": {
                    "type": "object",
                    "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            },
                            "linked_data": {
                              "type": "object",
                              "x-read-only": true,
                              "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  },
                  "quality_scores": {
                    "type": "object",
                    "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "parent": null,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": {
                    "print": {
                      "en_US": "A",
                      "fr_FR": "B"
                    },
                    "mobile": {
                      "en_US": "C",
                      "fr_FR": "D"
                    },
                    "ecommerce": {
                      "en_US": "A",
                      "fr_FR": "E"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        },
        "patch": {
          "summary": "Update/create a product",
          "operationId": "patch_products__code_",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to update a given product. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product exists for the given identifier, it creates it. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product you try to update. It may result in the creation of a draft if you only have edit rights through the product's categories.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                    "default": "null only in the case of a non variant product"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                    "default": "null"
                  },
                  "values": {
                    "type": "object",
                    "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            },
                            "linked_data": {
                              "type": "object",
                              "x-read-only": true,
                              "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  },
                  "quality_scores": {
                    "type": "object",
                    "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "parent": null,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": {
                    "print": {
                      "en_US": "A",
                      "fr_FR": "B"
                    },
                    "mobile": {
                      "en_US": "C",
                      "fr_FR": "D"
                    },
                    "ecommerce": {
                      "en_US": "A",
                      "fr_FR": "E"
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "x-details": "Means that the creation was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "204": {
              "description": "No content to return",
              "x-details": "Means that the update was successful",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "type": "string"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete a product",
          "operationId": "delete_products__code_",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to delete a given product. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the product you try to delete.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "No content to return",
              "x-details": "Means that the deletion was successful"
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "/api/rest/v1/products/{code}/proposal": {
        "post": {
          "summary": "Submit a draft for approval",
          "operationId": "post_proposal",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "description": "This endpoint allows you to submit a draft for approval.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "Submitted",
              "x-details": "Means that the draft submission was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rest/v1/products/{code}/draft": {
        "get": {
          "summary": "Get a draft",
          "operationId": "get_draft__code_",
          "tags": [
            "Product"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "description": "This endpoint allows you to get the information about a given draft.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the draft in JSON standard format",
              "schema": {
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                    "default": "null only in the case of a non variant product"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                    "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                    "default": "null"
                  },
                  "values": {
                    "type": "object",
                    "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            },
                            "linked_data": {
                              "type": "object",
                              "x-read-only": true,
                              "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                              "properties": {
                                "attribute": {
                                  "type": "string"
                                },
                                "code": {
                                  "type": "string"
                                },
                                "labels": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  },
                  "quality_scores": {
                    "type": "object",
                    "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "parent": null,
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black",
                        "linked_data": {
                          "attribute": "color",
                          "code": "black",
                          "labels": {
                            "en_US": "Black",
                            "fr_FR": "Noir"
                          }
                        }
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m",
                        "linked_data": {
                          "attribute": "size",
                          "code": "m",
                          "labels": {
                            "en_US": "M",
                            "fr_FR": "M"
                          }
                        }
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "winter_2016"
                        ],
                        "linked_data": {
                          "winter_2016": {
                            "attribute": "collection",
                            "code": "winter_2016",
                            "labels": {
                              "en_US": "Winter 2016",
                              "fr_FR": "Hiver 2016"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "cap",
                          "quantity": 2
                        },
                        {
                          "identifier": "shoes",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "identifier": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "quality_scores": {
                    "print": {
                      "en_US": "A",
                      "fr_FR": "B"
                    },
                    "mobile": {
                      "en_US": "C",
                      "fr_FR": "D"
                    },
                    "ecommerce": {
                      "en_US": "A",
                      "fr_FR": "E"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/product-models": {
        "get": {
          "summary": "Get list of product models",
          "operationId": "get_product_models",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to get a list of product models. Product models are paginated. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter product models, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "required": false,
              "type": "string"
            },
            {
              "name": "scope",
              "in": "query",
              "type": "string",
              "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "locales",
              "in": "query",
              "type": "string",
              "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "attributes",
              "in": "query",
              "type": "string",
              "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "page",
              "x-validation-rules": "One of the following values",
              "enum": [
                "page",
                "search_after"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "default": 1
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "cursor to the first page"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of products in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "default": false,
              "type": "boolean",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "Return product models paginated",
              "schema": {
                "title": "Product Models",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  },
                  {
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "code",
                                    "family_variant"
                                  ],
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Product model code",
                                      "x-immutable": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                                      "x-validation-rules": "It is equal to an existing family code",
                                      "x-immutable": true
                                    },
                                    "family_variant": {
                                      "type": "string",
                                      "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                                      "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                                      "x-immutable": true
                                    },
                                    "parent": {
                                      "type": "string",
                                      "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                                      "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                                      "default": "null"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the categories in which the product model is categorized",
                                      "x-validation-rules": "Each string of the array is equal to an existing category code",
                                      "items": {
                                        "type": "string"
                                      },
                                      "default": []
                                    },
                                    "values": {
                                      "type": "object",
                                      "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section",
                                      "properties": {
                                        "attributeCode": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "scope": {
                                                "type": "string",
                                                "description": "Channel code of the product value"
                                              },
                                              "locale": {
                                                "type": "string",
                                                "description": "Locale code of the product value"
                                              },
                                              "data": {
                                                "type": "object",
                                                "description": "Product value"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "associations": {
                                      "type": "object",
                                      "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of product identifiers with which the product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "quantified_associations": {
                                      "type": "object",
                                      "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                                      "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                                      "properties": {
                                        "quantifiedAssociationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "products": {
                                              "type": "array",
                                              "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "identifier": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string"
                                                  },
                                                  "quantity": {
                                                    "type": "integer"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                                      "x-immutable": true,
                                      "x-read-only": true,
                                      "properties": {
                                        "workflow_status": {
                                          "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                                          "type": "string",
                                          "enum": [
                                            "read_only",
                                            "draft_in_progress",
                                            "proposal_waiting_for_approval",
                                            "working_copy"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "code": "model-biker-jacket-leather",
                                    "family": "clothing",
                                    "family_variant": "clothing_material_size",
                                    "parent": "model-biker-jacket",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "values": {
                                      "color": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "antique_white"
                                        }
                                      ],
                                      "material": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "leather"
                                        }
                                      ],
                                      "variation_name": [
                                        {
                                          "locale": "en_US",
                                          "scope": null,
                                          "data": "Biker jacket leather"
                                        }
                                      ],
                                      "name": [
                                        {
                                          "locale": "en_US",
                                          "scope": null,
                                          "data": "Biker jacket"
                                        }
                                      ],
                                      "collection": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": [
                                            "summer_2017"
                                          ]
                                        }
                                      ],
                                      "description": [
                                        {
                                          "locale": "en_US",
                                          "scope": "ecommerce",
                                          "data": "Biker jacket"
                                        }
                                      ]
                                    },
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    },
                                    "quantified_associations": {
                                      "PRODUCT_SET": {
                                        "products": [
                                          {
                                            "identifier": "top",
                                            "quantity": 2
                                          },
                                          {
                                            "identifier": "cap",
                                            "quantity": 1
                                          }
                                        ],
                                        "product_models": [
                                          {
                                            "code": "model-biker-jacket-leather",
                                            "quantity": 2
                                          }
                                        ]
                                      }
                                    },
                                    "created": "2017-10-02T15:03:55+02:00",
                                    "updated": "2017-10-02T15:03:55+02:00"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "examples": {
                "_links": {
                  "self": {
                    "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=qg%3D%3D"
                  },
                  "first": {
                    "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3"
                  },
                  "next": {
                    "href": "http://demo.akeneo.com/api/rest/v1/product-models?pagination_type=search_after&limit=3&search_after=rw%3D%3D"
                  }
                },
                "_embedded": {
                  "items": [
                    {
                      "_links": {
                        "self": {
                          "href": "http://demo.akeneo.com/api/rest/v1/product-models/amarisshoe"
                        }
                      },
                      "code": "amarisshoe",
                      "family": "shoes",
                      "family_variant": "shoes_VariantA1",
                      "parent": null,
                      "categories": [
                        "clothing",
                        "shoes"
                      ],
                      "values": {
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "50.00",
                                "currency": "EUR"
                              }
                            ]
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "scope": "ecommerce",
                            "data": "I like shoes!"
                          }
                        ]
                      },
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "cap",
                              "quantity": 2
                            },
                            {
                              "identifier": "shoes",
                              "quantity": 1
                            }
                          ],
                          "product_models": [
                            {
                              "identifier": "model-biker-jacket-leather",
                              "quantity": 2
                            }
                          ]
                        }
                      },
                      "created": "2017-10-04T18:04:10+02:00",
                      "updated": "2017-10-04T18:04:10+02:00"
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "http://demo.akeneo.com/api/rest/v1/product-models/Abiloitshirt"
                        }
                      },
                      "code": "Abiloitshirt",
                      "family": "clothing",
                      "family_variant": "clothing_VariantA1",
                      "parent": null,
                      "categories": [
                        "clothing",
                        "tshirt"
                      ],
                      "values": {
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "50.00",
                                "currency": "EUR"
                              }
                            ]
                          }
                        ],
                        "description": [
                          {
                            "locale": "en_US",
                            "scope": "ecommerce",
                            "data": "I like tshirt!"
                          }
                        ]
                      },
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      },
                      "quantified_associations": {
                        "PRODUCT_SET": {
                          "products": [
                            {
                              "identifier": "cap",
                              "quantity": 2
                            }
                          ],
                          "product_models": []
                        }
                      },
                      "created": "2017-10-04T18:04:10+02:00",
                      "updated": "2017-10-04T18:04:10+02:00"
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "http://demo.akeneo.com/api/rest/v1/product-models/Astertrousers"
                        }
                      },
                      "code": "Astertrousers",
                      "family": "clothing",
                      "family_variant": "clothing_VariantA1",
                      "parent": null,
                      "categories": [
                        "clothing",
                        "trousers"
                      ],
                      "values": {
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "50.00",
                                "currency": "EUR"
                              }
                            ]
                          }
                        ],
                        "associations": {
                          "PACK": {
                            "products": [
                              "sunglasses"
                            ],
                            "product_models": [],
                            "groups": []
                          }
                        },
                        "quantified_associations": {},
                        "description": [
                          {
                            "locale": "en_US",
                            "scope": "ecommerce",
                            "data": "I like trousers!"
                          }
                        ]
                      },
                      "created": "2017-10-04T18:04:10+02:00",
                      "updated": "2017-10-04T18:04:10+02:00"
                    }
                  ]
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new product model",
          "operationId": "post_product_models",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to create a new product model. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product model you try to create.",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "family_variant"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Product model code",
                    "x-immutable": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                    "x-validation-rules": "It is equal to an existing family code",
                    "x-immutable": true
                  },
                  "family_variant": {
                    "type": "string",
                    "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                    "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                    "x-immutable": true
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                    "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product model is categorized",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "code": "model-biker-jacket-leather",
                  "family": "clothing",
                  "family_variant": "clothing_material_size",
                  "parent": "model-biker-jacket",
                  "categories": [
                    "summer_collection"
                  ],
                  "values": {
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "antique_white"
                      }
                    ],
                    "material": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "leather"
                      }
                    ],
                    "variation_name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket leather"
                      }
                    ],
                    "name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket"
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "summer_2017"
                        ]
                      }
                    ],
                    "description": [
                      {
                        "locale": "en_US",
                        "scope": "ecommerce",
                        "data": "Biker jacket"
                      }
                    ]
                  },
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "top",
                          "quantity": 2
                        },
                        {
                          "identifier": "cap",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "code": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "created": "2017-10-02T15:03:55+02:00",
                  "updated": "2017-10-02T15:03:55+02:00"
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "x-details": "Means that the creation was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Bad request",
              "x-details": "Can be caused by a malformed JSON request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 400,
                "message": "Invalid JSON message received"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        },
        "patch": {
          "summary": "Update/create several product models",
          "operationId": "patch_product_models",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to update and/or create several product models at once. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product models exists for the given code, it creates it. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product models you try to update. It may result in the creation of drafts if you only have edit rights through the product model's categories.",
          "x-body-by-line": "Contains several lines, each line is a product model in JSON standard format",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "x-examples": {
                  "x-example-1": "{\"code\": \"sub_sweat_option_a\", \"parent\": \"sweat\", \"values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"data\": \"optionA\"}]}}",
                  "x-example-2": "{\"code\": \"sub_sweat_option_b\", \"parent\": \"sweat\", \"values\": {\"a_simple_select\": [{\"locale\": null, \"scope\": null, \"data\": \"optionA\"}]}}",
                  "x-example-3": "{\"code\":\"tshirt\", \"parent\": \"root_tshirt\", \"family_variant\":\"clothesvariant\",\"values\":{\"description\":[{\"scope\":\"ecommerce\",\"locale\":\"en_US\",\"data\":\"My amazing tshirt\"}]}}"
                },
                "type": "object",
                "required": [
                  "code",
                  "family_variant"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Product model code",
                    "x-immutable": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                    "x-validation-rules": "It is equal to an existing family code",
                    "x-immutable": true
                  },
                  "family_variant": {
                    "type": "string",
                    "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                    "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                    "x-immutable": true
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                    "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product model is categorized",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "code": "model-biker-jacket-leather",
                  "family": "clothing",
                  "family_variant": "clothing_material_size",
                  "parent": "model-biker-jacket",
                  "categories": [
                    "summer_collection"
                  ],
                  "values": {
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "antique_white"
                      }
                    ],
                    "material": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "leather"
                      }
                    ],
                    "variation_name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket leather"
                      }
                    ],
                    "name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket"
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "summer_2017"
                        ]
                      }
                    ],
                    "description": [
                      {
                        "locale": "en_US",
                        "scope": "ecommerce",
                        "data": "Biker jacket"
                      }
                    ]
                  },
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "top",
                          "quantity": 2
                        },
                        {
                          "identifier": "cap",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "code": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "created": "2017-10-02T15:03:55+02:00",
                  "updated": "2017-10-02T15:03:55+02:00"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation",
              "x-no-entity": true,
              "schema": {
                "type": "object",
                "properties": {
                  "line": {
                    "type": "integer",
                    "description": "Line number"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Resource identifier, only filled when the resource is a product"
                  },
                  "code": {
                    "type": "string",
                    "description": "Resource code, only filled when the resource is not a product"
                  },
                  "status_code": {
                    "type": "integer",
                    "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "x-example-1": "{\"line\":1,\"code\":\"sub_sweat_option_a\",\"status_code\":204}",
                "x-example-2": "{\"line\":2,\"code\":\"sub_sweat_option_b\",\"status_code\":422,\"message\":\"Validation failed.\",\"errors\":[{\"property\":\"attribute\",\"message\":\"Cannot set value \\\"Option A\\\" for the attribute axis \\\"a_simple_select\\\", as another sibling entity already has this value\"}]}",
                "x-example-3": "{\"line\":3,\"code\":\"tshirt\",\"status_code\":201}"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "413": {
              "description": "Request Entity Too Large",
              "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 413,
                "message": "Too many resources to process, 100 is the maximum allowed."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/vnd.akeneo.collection+json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/product-models/{code}": {
        "get": {
          "summary": "Get a product model",
          "operationId": "get_product_models__code_",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to get the information about a given product model. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product model you request.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the product model in JSON standard format.",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "family_variant"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Product model code",
                    "x-immutable": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                    "x-validation-rules": "It is equal to an existing family code",
                    "x-immutable": true
                  },
                  "family_variant": {
                    "type": "string",
                    "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                    "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                    "x-immutable": true
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                    "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product model is categorized",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "code": "model-biker-jacket-leather",
                  "family": "clothing",
                  "family_variant": "clothing_material_size",
                  "parent": "model-biker-jacket",
                  "categories": [
                    "summer_collection"
                  ],
                  "values": {
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "antique_white"
                      }
                    ],
                    "material": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "leather"
                      }
                    ],
                    "variation_name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket leather"
                      }
                    ],
                    "name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket"
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "summer_2017"
                        ]
                      }
                    ],
                    "description": [
                      {
                        "locale": "en_US",
                        "scope": "ecommerce",
                        "data": "Biker jacket"
                      }
                    ]
                  },
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "top",
                          "quantity": 2
                        },
                        {
                          "identifier": "cap",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "code": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "created": "2017-10-02T15:03:55+02:00",
                  "updated": "2017-10-02T15:03:55+02:00"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        },
        "patch": {
          "summary": "Update/create a product model",
          "operationId": "patch_product_models__code_",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "description": "This endpoint allows you to update a given product model. Learn more about <a href=\"/documentation/update.html#update-behavior\">Update behavior</a>. Note that if no product model exists for the given code, it creates it. In the Enterprise Edition PIM since the 2.3, permissions based on your user groups are applied to the product model you try to update. It may result in the creation of a draft if you only have edit rights through the product model's categories.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "family_variant"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Product model code",
                    "x-immutable": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                    "x-validation-rules": "It is equal to an existing family code",
                    "x-immutable": true
                  },
                  "family_variant": {
                    "type": "string",
                    "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                    "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                    "x-immutable": true
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                    "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product model is categorized",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "code": "model-biker-jacket-leather",
                  "family": "clothing",
                  "family_variant": "clothing_material_size",
                  "parent": "model-biker-jacket",
                  "categories": [
                    "summer_collection"
                  ],
                  "values": {
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "antique_white"
                      }
                    ],
                    "material": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "leather"
                      }
                    ],
                    "variation_name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket leather"
                      }
                    ],
                    "name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket"
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "summer_2017"
                        ]
                      }
                    ],
                    "description": [
                      {
                        "locale": "en_US",
                        "scope": "ecommerce",
                        "data": "Biker jacket"
                      }
                    ]
                  },
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "top",
                          "quantity": 2
                        },
                        {
                          "identifier": "cap",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "code": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "created": "2017-10-02T15:03:55+02:00",
                  "updated": "2017-10-02T15:03:55+02:00"
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "x-details": "Means that the creation was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "204": {
              "description": "No content to return",
              "x-details": "Means that the update was successful",
              "headers": {
                "Location": {
                  "description": "URI of the updated resource",
                  "type": "string"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rest/v1/product-models/{code}/proposal": {
        "post": {
          "summary": "Submit a draft for approval",
          "operationId": "post_product_model_proposal",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.3",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "description": "This endpoint allows you to submit a product model draft for approval.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "201": {
              "description": "Submitted",
              "x-details": "Means that the draft submission was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rest/v1/product-models/{code}/draft": {
        "get": {
          "summary": "Get a draft",
          "operationId": "get_product_model_draft__code_",
          "tags": [
            "Product model"
          ],
          "x-versions": [
            "2.3",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "description": "This endpoint allows you to get the information about a given product model draft.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the draft in JSON standard format",
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "family_variant"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Product model code",
                    "x-immutable": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                    "x-validation-rules": "It is equal to an existing family code",
                    "x-immutable": true
                  },
                  "family_variant": {
                    "type": "string",
                    "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                    "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                    "x-immutable": true
                  },
                  "parent": {
                    "type": "string",
                    "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                    "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the product model is categorized",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of product identifiers with which the product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "quantified_associations": {
                    "type": "object",
                    "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                    "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                    "properties": {
                      "quantifiedAssociationTypeCode": {
                        "type": "object",
                        "properties": {
                          "products": {
                            "type": "array",
                            "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "quantity": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                    "x-immutable": true,
                    "x-read-only": true,
                    "properties": {
                      "workflow_status": {
                        "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                        "type": "string",
                        "enum": [
                          "read_only",
                          "draft_in_progress",
                          "proposal_waiting_for_approval",
                          "working_copy"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "code": "model-biker-jacket-leather",
                  "family": "clothing",
                  "family_variant": "clothing_material_size",
                  "parent": "model-biker-jacket",
                  "categories": [
                    "summer_collection"
                  ],
                  "values": {
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "antique_white"
                      }
                    ],
                    "material": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "leather"
                      }
                    ],
                    "variation_name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket leather"
                      }
                    ],
                    "name": [
                      {
                        "locale": "en_US",
                        "scope": null,
                        "data": "Biker jacket"
                      }
                    ],
                    "collection": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          "summer_2017"
                        ]
                      }
                    ],
                    "description": [
                      {
                        "locale": "en_US",
                        "scope": "ecommerce",
                        "data": "Biker jacket"
                      }
                    ]
                  },
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  },
                  "quantified_associations": {
                    "PRODUCT_SET": {
                      "products": [
                        {
                          "identifier": "top",
                          "quantity": 2
                        },
                        {
                          "identifier": "cap",
                          "quantity": 1
                        }
                      ],
                      "product_models": [
                        {
                          "code": "model-biker-jacket-leather",
                          "quantity": 2
                        }
                      ]
                    }
                  },
                  "created": "2017-10-02T15:03:55+02:00",
                  "updated": "2017-10-02T15:03:55+02:00"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/published-products": {
        "get": {
          "summary": "Get list of published products",
          "operationId": "get_published_products",
          "description": "This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.",
          "tags": [
            "Published product"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "description": "Filter published products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section",
              "required": false,
              "type": "string"
            },
            {
              "name": "scope",
              "in": "query",
              "type": "string",
              "description": "Filter published product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on published product values</a> section",
              "required": false
            },
            {
              "name": "locales",
              "in": "query",
              "type": "string",
              "description": "Filter published product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on published product values</a> section",
              "required": false
            },
            {
              "name": "attributes",
              "in": "query",
              "type": "string",
              "description": "Filter published product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section",
              "required": false
            },
            {
              "name": "pagination_type",
              "in": "query",
              "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "page",
              "x-validation-rules": "One of the following values",
              "enum": [
                "page",
                "search_after"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "default": 1
            },
            {
              "name": "search_after",
              "in": "query",
              "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "string",
              "default": "cursor to the first page"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of products in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "default": false,
              "type": "boolean",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "Return published products paginated",
              "schema": {
                "title": "Products",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  },
                  {
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI of the resource"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "identifier"
                                  ],
                                  "properties": {
                                    "identifier": {
                                      "type": "string",
                                      "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Whether the published product is enable",
                                      "default": true
                                    },
                                    "family": {
                                      "type": "string",
                                      "description": "Family code from which the published product inherits its attributes and attributes requirements",
                                      "x-validation-rules": "It is equal to an existing family code",
                                      "default": "null"
                                    },
                                    "categories": {
                                      "type": "array",
                                      "description": "Codes of the categories in which the published product is classified",
                                      "x-validation-rules": "Each string of the array is equal to an existing category code",
                                      "items": {
                                        "type": "string"
                                      },
                                      "default": []
                                    },
                                    "groups": {
                                      "type": "array",
                                      "description": "Codes of the groups to which the published product belong",
                                      "x-validation-rules": "Each string of the array is equal to an existing group code",
                                      "items": {
                                        "type": "string"
                                      },
                                      "default": []
                                    },
                                    "values": {
                                      "type": "object",
                                      "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                                      "x-validation-rules": "Validation rules detailed in Product values section",
                                      "properties": {
                                        "attributeCode": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "scope": {
                                                "type": "string",
                                                "description": "Channel code of the product value"
                                              },
                                              "locale": {
                                                "type": "string",
                                                "description": "Locale code of the product value"
                                              },
                                              "data": {
                                                "type": "object",
                                                "description": "Product value"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "associations": {
                                      "type": "object",
                                      "description": "Several associations related to groups and/or other published products, grouped by association types",
                                      "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier.",
                                      "properties": {
                                        "associationTypeCode": {
                                          "type": "object",
                                          "properties": {
                                            "groups": {
                                              "type": "array",
                                              "description": "Array of groups codes with which the published product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "products": {
                                              "type": "array",
                                              "description": "Array of published product identifiers with which the published product is in relation",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "product_models": {
                                              "type": "array",
                                              "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "created": {
                                      "type": "string",
                                      "description": "Date of creation",
                                      "format": "dateTime",
                                      "x-immutable": true,
                                      "x-read-only": true
                                    },
                                    "updated": {
                                      "type": "string",
                                      "description": "Date of the last update",
                                      "format": "dateTime",
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "identifier": "top",
                                    "enabled": true,
                                    "family": "tshirt",
                                    "categories": [
                                      "summer_collection"
                                    ],
                                    "groups": [],
                                    "values": {
                                      "name": [
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": null
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": null
                                        }
                                      ],
                                      "description": [
                                        {
                                          "data": "Summer top",
                                          "locale": "en_US",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Top",
                                          "locale": "en_US",
                                          "scope": "tablet"
                                        },
                                        {
                                          "data": "Débardeur pour l'été",
                                          "locale": "fr_FR",
                                          "scope": "ecommerce"
                                        },
                                        {
                                          "data": "Débardeur",
                                          "locale": "fr_FR",
                                          "scope": "tablet"
                                        }
                                      ],
                                      "price": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": [
                                            {
                                              "amount": "15.5",
                                              "currency": "EUR"
                                            },
                                            {
                                              "amount": "15",
                                              "currency": "USD"
                                            }
                                          ]
                                        }
                                      ],
                                      "color": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "black"
                                        }
                                      ],
                                      "size": [
                                        {
                                          "locale": null,
                                          "scope": null,
                                          "data": "m"
                                        }
                                      ]
                                    },
                                    "created": "2016-06-23T18:24:44+02:00",
                                    "updated": "2016-06-25T17:56:12+02:00",
                                    "associations": {
                                      "PACK": {
                                        "products": [
                                          "sunglass"
                                        ],
                                        "product_models": [],
                                        "groups": []
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "examples": {
                "_links": {
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=3&limit=3"
                  },
                  "first": {
                    "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=1&limit=3"
                  },
                  "previous": {
                    "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=2&limit=3"
                  },
                  "next": {
                    "href": "https://demo.akeneo.com/api/rest/v1/published-products?page=4&limit=3"
                  }
                },
                "current_page": 3,
                "_embedded": {
                  "items": [
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/published-products/top"
                        }
                      },
                      "identifier": "top",
                      "family": "tshirt",
                      "groups": [],
                      "categories": [
                        "summer_collection"
                      ],
                      "enabled": true,
                      "values": {
                        "name": [
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": null
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": null
                          }
                        ],
                        "description": [
                          {
                            "data": "Summer top",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Top",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Débardeur pour l'été",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Débardeur",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "15.5",
                                "currency": "EUR"
                              },
                              {
                                "amount": "15",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "black"
                          }
                        ],
                        "size": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "m"
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      }
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/published-products/cap"
                        }
                      },
                      "identifier": "cap",
                      "family": "caps",
                      "groups": [],
                      "categories": [
                        "summer_collection"
                      ],
                      "enabled": true,
                      "values": {
                        "name": [
                          {
                            "data": "Cap",
                            "locale": "en_US",
                            "scope": null
                          },
                          {
                            "data": "Casquette",
                            "locale": "fr_FR",
                            "scope": null
                          }
                        ],
                        "description": [
                          {
                            "data": "Cap unisex",
                            "locale": "en_US",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Cap unisex",
                            "locale": "en_US",
                            "scope": "tablet"
                          },
                          {
                            "data": "Casquette unisexe",
                            "locale": "fr_FR",
                            "scope": "ecommerce"
                          },
                          {
                            "data": "Casquette unisexe",
                            "locale": "fr_FR",
                            "scope": "tablet"
                          }
                        ],
                        "price": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": [
                              {
                                "amount": "20",
                                "currency": "EUR"
                              },
                              {
                                "amount": "20",
                                "currency": "USD"
                              }
                            ]
                          }
                        ],
                        "color": [
                          {
                            "locale": null,
                            "scope": null,
                            "data": "black"
                          }
                        ]
                      },
                      "created": "2016-06-23T18:24:44+02:00",
                      "updated": "2016-06-25T17:56:12+02:00",
                      "associations": {
                        "PACK": {
                          "products": [
                            "sunglasses"
                          ],
                          "product_models": [],
                          "groups": []
                        }
                      }
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/published-products/sweat"
                        }
                      },
                      "identifier": "sweat",
                      "family": null,
                      "groups": [],
                      "categories": [
                        "winter_collection"
                      ],
                      "enabled": true,
                      "values": {},
                      "created": "2016-06-23T11:24:44+02:00",
                      "updated": "2016-06-23T11:24:44+02:00",
                      "associations": {}
                    }
                  ]
                }
              }
            },
            "400": {
              "description": "Bad request",
              "x-details": "Can be caused by a malformed JSON request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 400,
                "message": "Invalid JSON message received"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rest/v1/published-products/{code}": {
        "get": {
          "summary": "Get a published product",
          "operationId": "get_published_products__code_",
          "tags": [
            "Published product"
          ],
          "x-versions": [
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-ee": true,
          "description": "This endpoint allows you to get the information about a given published product.",
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the published product in JSON standard format",
              "schema": {
                "type": "object",
                "required": [
                  "identifier"
                ],
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the published product is enable",
                    "default": true
                  },
                  "family": {
                    "type": "string",
                    "description": "Family code from which the published product inherits its attributes and attributes requirements",
                    "x-validation-rules": "It is equal to an existing family code",
                    "default": "null"
                  },
                  "categories": {
                    "type": "array",
                    "description": "Codes of the categories in which the published product is classified",
                    "x-validation-rules": "Each string of the array is equal to an existing category code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "groups": {
                    "type": "array",
                    "description": "Codes of the groups to which the published product belong",
                    "x-validation-rules": "Each string of the array is equal to an existing group code",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "values": {
                    "type": "object",
                    "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                    "x-validation-rules": "Validation rules detailed in Product values section",
                    "properties": {
                      "attributeCode": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "scope": {
                              "type": "string",
                              "description": "Channel code of the product value"
                            },
                            "locale": {
                              "type": "string",
                              "description": "Locale code of the product value"
                            },
                            "data": {
                              "type": "object",
                              "description": "Product value"
                            }
                          }
                        }
                      }
                    }
                  },
                  "associations": {
                    "type": "object",
                    "description": "Several associations related to groups and/or other published products, grouped by association types",
                    "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier.",
                    "properties": {
                      "associationTypeCode": {
                        "type": "object",
                        "properties": {
                          "groups": {
                            "type": "array",
                            "description": "Array of groups codes with which the published product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "products": {
                            "type": "array",
                            "description": "Array of published product identifiers with which the published product is in relation",
                            "items": {
                              "type": "string"
                            }
                          },
                          "product_models": {
                            "type": "array",
                            "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "description": "Date of creation",
                    "format": "dateTime",
                    "x-immutable": true,
                    "x-read-only": true
                  },
                  "updated": {
                    "type": "string",
                    "description": "Date of the last update",
                    "format": "dateTime",
                    "x-read-only": true
                  }
                },
                "example": {
                  "identifier": "top",
                  "enabled": true,
                  "family": "tshirt",
                  "categories": [
                    "summer_collection"
                  ],
                  "groups": [],
                  "values": {
                    "name": [
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": null
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": null
                      }
                    ],
                    "description": [
                      {
                        "data": "Summer top",
                        "locale": "en_US",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Top",
                        "locale": "en_US",
                        "scope": "tablet"
                      },
                      {
                        "data": "Débardeur pour l'été",
                        "locale": "fr_FR",
                        "scope": "ecommerce"
                      },
                      {
                        "data": "Débardeur",
                        "locale": "fr_FR",
                        "scope": "tablet"
                      }
                    ],
                    "price": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": [
                          {
                            "amount": "15.5",
                            "currency": "EUR"
                          },
                          {
                            "amount": "15",
                            "currency": "USD"
                          }
                        ]
                      }
                    ],
                    "color": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "black"
                      }
                    ],
                    "size": [
                      {
                        "locale": null,
                        "scope": null,
                        "data": "m"
                      }
                    ]
                  },
                  "created": "2016-06-23T18:24:44+02:00",
                  "updated": "2016-06-25T17:56:12+02:00",
                  "associations": {
                    "PACK": {
                      "products": [
                        "sunglass"
                      ],
                      "product_models": [],
                      "groups": []
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/media-files": {
        "get": {
          "summary": "Get a list of product media files",
          "operationId": "get_media_files",
          "description": "This endpoint allows you to get a list of media files that are used as attribute values in products or product models.",
          "tags": [
            "Product media file"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "default": 1
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
              "required": false,
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            {
              "name": "with_count",
              "in": "query",
              "description": "Return the count of products in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
              "default": false,
              "type": "boolean",
              "required": false
            }
          ],
          "responses": {
            "200": {
              "description": "Return media files paginated",
              "schema": {
                "title": "MediaFiles",
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the current page of resources"
                              }
                            }
                          },
                          "first": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the first page of resources"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the previous page of resources"
                              }
                            }
                          },
                          "next": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI of the next page of resources"
                              }
                            }
                          }
                        }
                      },
                      "current_page": {
                        "type": "integer",
                        "description": "Current page number"
                      }
                    }
                  },
                  {
                    "properties": {
                      "_embedded": {
                        "type": "object",
                        "properties": {
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "_links": {
                                      "type": "object",
                                      "properties": {
                                        "self": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI to get the metadata of the media file"
                                            }
                                          }
                                        },
                                        "download": {
                                          "type": "object",
                                          "properties": {
                                            "href": {
                                              "type": "string",
                                              "description": "URI to download the binaries of the media file"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Media file code",
                                      "x-immutable": true
                                    },
                                    "original_filename": {
                                      "type": "string",
                                      "description": "Original filename of the media file"
                                    },
                                    "mime_type": {
                                      "type": "string",
                                      "description": "Mime type of the media file",
                                      "x-read-only": true
                                    },
                                    "size": {
                                      "type": "integer",
                                      "description": "Size of the media file",
                                      "x-read-only": true
                                    },
                                    "extension": {
                                      "type": "string",
                                      "description": "Extension of the media file",
                                      "x-read-only": true
                                    }
                                  },
                                  "example": {
                                    "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                                    "original_filename": "10806799-1356.jpg",
                                    "mime_type": "image/jpeg",
                                    "size": 16070,
                                    "extension": "jpg"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "examples": {
                "_links": {
                  "self": {
                    "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                  },
                  "first": {
                    "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                  },
                  "previous": {
                    "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=1&limit=4"
                  },
                  "next": {
                    "href": "https://demo.akeneo.com/api/rest/v1/media-files?page=2&limit=4"
                  }
                },
                "current_page": 2,
                "_embedded": {
                  "items": [
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg"
                        },
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
                        }
                      },
                      "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                      "original_filename": "10806799-1356.jpg",
                      "mime_type": "image/jpeg",
                      "size": 16070,
                      "extension": "jpg"
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg"
                        },
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg/download"
                        }
                      },
                      "code": "d/0/3/2/d032a92d994df3ef67ee6746b7b7a795c2964e7c_10734346_1480.jpg",
                      "original_filename": "10734346-1480.jpg",
                      "mime_type": "image/jpeg",
                      "size": 16454,
                      "extension": "jpg"
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg"
                        },
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg/download"
                        }
                      },
                      "code": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_12431976_8797.jpg",
                      "original_filename": "12431976-8797.jpg",
                      "mime_type": "image/jpeg",
                      "size": 19725,
                      "extension": "jpg"
                    },
                    {
                      "_links": {
                        "self": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg"
                        },
                        "download": {
                          "href": "https://demo.akeneo.com/api/rest/v1/media-files/0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg/download"
                        }
                      },
                      "code": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343e6207ab54c7b_107406_9841.jpg",
                      "original_filename": "107406-9841.jpg",
                      "mime_type": "image/jpeg",
                      "size": 17639,
                      "extension": "jpg"
                    }
                  ]
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        },
        "post": {
          "summary": "Create a new product media file",
          "operationId": "post_media_files",
          "description": "This endpoint allows you to create a new media file and associate it to an attribute value of a given product or product model.",
          "tags": [
            "Product media file"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "x-form-data": true,
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "product": {
                    "type": "string",
                    "description": "The product to which the media file will be associated. It is a JSON string that follows this format '{\"identifier\":\"product_identifier\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product_model` field, but not both at the same time."
                  },
                  "product_model": {
                    "type": "string",
                    "description": "The product model to which the media file will be associated. It is a JSON string that follows this format '{\"code\":\"product_model_code\", \"attribute\":\"attribute_code\", \"scope\":\"channel_code\",\"locale\":\"locale_code\"}'. You have to either use this field or the `product` field, but not both at the same time."
                  },
                  "file": {
                    "type": "string",
                    "description": "The binaries of the file",
                    "format": "binary"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created",
              "x-details": "Means that the creation was successful",
              "headers": {
                "Location": {
                  "description": "URI of the created resource",
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Bad request",
              "x-details": "Can be caused by a malformed JSON request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 400,
                "message": "Invalid JSON message received"
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `multipart/form-data`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      },
      "/api/rest/v1/media-files/{code}": {
        "get": {
          "summary": "Get a product media file",
          "operationId": "get_media_files__code_",
          "description": "This endpoint allows you to get the information about a given media file that is used as an attribute value of a product or a product model.",
          "tags": [
            "Product media file"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the content of the media file in JSON standard format",
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "_links": {
                        "type": "object",
                        "x-read-only": true,
                        "properties": {
                          "download": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string",
                                "description": "URI to download the binaries of the media file"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Media file code",
                        "x-immutable": true
                      },
                      "original_filename": {
                        "type": "string",
                        "description": "Original filename of the media file"
                      },
                      "mime_type": {
                        "type": "string",
                        "description": "Mime type of the media file",
                        "x-read-only": true
                      },
                      "size": {
                        "type": "integer",
                        "description": "Size of the media file",
                        "x-read-only": true
                      },
                      "extension": {
                        "type": "string",
                        "description": "Extension of the media file",
                        "x-read-only": true
                      }
                    },
                    "example": {
                      "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                      "original_filename": "10806799-1356.jpg",
                      "mime_type": "image/jpeg",
                      "size": 16070,
                      "extension": "jpg"
                    }
                  }
                ],
                "example": {
                  "_links": {
                    "download": {
                      "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
                    }
                  },
                  "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
                  "original_filename": "10806799-1356.jpg",
                  "mime_type": "image/jpeg",
                  "size": 16070,
                  "extension": "jpg"
                }
              }
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "/api/rest/v1/media-files/{code}/download": {
        "get": {
          "summary": "Download a product media file",
          "operationId": "get_media_files__code__download",
          "description": "This endpoint allows you to download a given media file that is used as an attribute value of a product or a product model.",
          "x-content-type": "Mime-type of the media file",
          "tags": [
            "Product media file"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "parameters": [
            {
              "name": "code",
              "in": "path",
              "description": "Code of the resource",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "x-details": "Returns the binary of the media file",
              "x-content-type": "Mime-type of the media file"
            },
            "401": {
              "description": "Authentication required",
              "x-details": "Can be caused by a missing or expired token",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 401,
                "message": "Authentication is required"
              }
            },
            "403": {
              "description": "Access forbidden",
              "x-details": "The user does not have the permission to execute this request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 403,
                "message": "Access forbidden. You are not allowed to list categories."
              }
            },
            "404": {
              "description": "Resource not found",
              "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 404,
                "message": "Resource `my_resource_code` does not exist."
              }
            }
          }
        }
      },
      "/api/rest/v1": {
        "get": {
          "summary": "Get list of all endpoints",
          "operationId": "get_endpoints",
          "description": "This endpoint allows you to get the list of all the available endpoints. No need to be authenticated to use this endpoint.",
          "tags": [
            "Overview"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-no-token": true,
          "responses": {
            "200": {
              "description": "Return the list of all available endpoints",
              "x-no-entity": true,
              "schema": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "description": "Host name"
                  },
                  "authentication": {
                    "type": "object",
                    "description": "Endpoint to get the authentication token"
                  },
                  "routes": {
                    "type": "object",
                    "description": "All the availables endpoints"
                  }
                }
              },
              "examples": {
                "host": "https://demo.akeneo.com",
                "authentication": {
                  "fos_oauth_server_token": {
                    "route": "/api/oauth/v1/token",
                    "methods": [
                      "POST"
                    ]
                  }
                },
                "routes": {
                  "pim_api_category_list": {
                    "route": "/api/rest/v1/categories",
                    "methods": [
                      "GET"
                    ]
                  },
                  "pim_api_category_get": {
                    "route": "/api/rest/v1/categories/{code}",
                    "methods": [
                      "GET"
                    ]
                  },
                  "pim_api_category_create": {
                    "route": "/api/rest/v1/categories",
                    "methods": [
                      "POST"
                    ]
                  },
                  "pim_api_category_partial_update": {
                    "route": "/api/rest/v1/categories/{code}",
                    "methods": [
                      "PATCH"
                    ]
                  }
                }
              }
            },
            "406": {
              "description": "Not Acceptable",
              "x-details": "The `Accept` header is not `application/json` but it should",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 406,
                "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
              }
            }
          }
        }
      },
      "/api/oauth/v1/token": {
        "post": {
          "summary": "Get authentication token",
          "operationId": "post_token",
          "description": "This endpoint allows you to get an authentication token. No need to be authenticated to use this endpoint.",
          "tags": [
            "Authentication"
          ],
          "x-versions": [
            "1.7",
            "2.x",
            "3.x",
            "4.0",
            "Serenity"
          ],
          "x-no-token": true,
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "type": "string",
              "required": true,
              "description": "Equal to 'Basic xx', where 'xx' is the base 64 encoding of the client id and secret. Find out how to generate them in the <a href=\"/documentation/authentication.html#client-idsecret-generation\">Client ID/secret generation</a> section."
            },
            {
              "name": "body",
              "in": "body",
              "x-form-data": true,
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password",
                  "grant_type"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Your PIM username"
                  },
                  "password": {
                    "type": "string",
                    "description": "Your PIM password"
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "Always equal to \"password\""
                  }
                },
                "example": {
                  "username": "admin",
                  "password": "admin",
                  "grant_type": "password"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Return an authentication token",
              "x-no-entity": true,
              "schema": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string",
                    "description": "Authentication token that should be given in every authenticated request to the API"
                  },
                  "expires_in": {
                    "type": "integer",
                    "description": "Validity of the token given in seconds, 3600s = 1h by default"
                  },
                  "token_type": {
                    "type": "string",
                    "description": "Token type, always equal to \"bearer\""
                  },
                  "scope": {
                    "type": "string",
                    "description": "Unused, always equal to \"null\""
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "Use this token when your access token has expired. See <a href=\"/documentation/authentication.html#refresh-an-expired-token\">Refresh an expired token</a> section for more details."
                  }
                }
              },
              "examples": {
                "access_token": "ZTZmYjU4ZmQxZWNmMzk1M2NlYzA5NmFhNmIzVjExMzE4NmJmODBkZGIyYTliYmQyNjk2ZDQwZThmNjdiZDQzOQ",
                "expires_in": 3600,
                "token_type": "bearer",
                "scope": null,
                "refresh_token": "M2FlODI0OTE3ODMyNjViMzRiOWE5ODMyNWViMThkNDU5YzJjNjFiZjNkZWFjMzIyYjc4YTgzZWY1MjE5ZTY5Mw"
              }
            },
            "400": {
              "description": "Bad request",
              "x-details": "Can be caused by a malformed JSON request",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 400,
                "message": "Invalid JSON message received"
              }
            },
            "415": {
              "description": "Unsupported Media type",
              "x-details": "The `Content-type` header has to be `application/json`",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 415,
                "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
              }
            },
            "422": {
              "description": "Unprocessable entity",
              "x-details": "The validation of the entity given in the body of the request failed",
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "HTTP status code"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining the error"
                  }
                }
              },
              "examples": {
                "code": 422,
                "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
                "_links": {
                  "documentation": {
                    "href": "http://api.akeneo.com/api-reference.html"
                  }
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Product": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the product is enable",
            "default": true
          },
          "family": {
            "type": "string",
            "description": "Family code from which the product inherits its attributes and attributes requirements",
            "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
            "default": "null only in the case of a non variant product"
          },
          "categories": {
            "type": "array",
            "description": "Codes of the categories in which the product is classified",
            "x-validation-rules": "Each string of the array is equal to an existing category code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "groups": {
            "type": "array",
            "description": "Codes of the groups to which the product belong",
            "x-validation-rules": "Each string of the array is equal to an existing group code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "parent": {
            "type": "string",
            "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
            "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
            "default": "null"
          },
          "values": {
            "type": "object",
            "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
            "x-validation-rules": "Validation rules detailed in Product values section",
            "properties": {
              "attributeCode": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "Channel code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "description": "Product value"
                    },
                    "linked_data": {
                      "type": "object",
                      "x-read-only": true,
                      "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "labels": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "associations": {
            "type": "object",
            "description": "Several associations related to groups, product models and/or other products, grouped by association types",
            "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
            "properties": {
              "associationTypeCode": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "description": "Array of groups codes with which the product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "products": {
                    "type": "array",
                    "description": "Array of product identifiers with which the product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "product_models": {
                    "type": "array",
                    "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "quantified_associations": {
            "type": "object",
            "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
            "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
            "properties": {
              "quantifiedAssociationTypeCode": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                    "items": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "product_models": {
                    "type": "array",
                    "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "created": {
            "type": "string",
            "description": "Date of creation",
            "format": "dateTime",
            "x-immutable": true,
            "x-read-only": true
          },
          "updated": {
            "type": "string",
            "description": "Date of the last update",
            "format": "dateTime",
            "x-read-only": true
          },
          "metadata": {
            "type": "object",
            "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
            "x-immutable": true,
            "x-read-only": true,
            "properties": {
              "workflow_status": {
                "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                "type": "string",
                "enum": [
                  "read_only",
                  "draft_in_progress",
                  "proposal_waiting_for_approval",
                  "working_copy"
                ]
              }
            }
          },
          "quality_scores": {
            "type": "object",
            "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
          }
        },
        "example": {
          "identifier": "top",
          "enabled": true,
          "family": "tshirt",
          "categories": [
            "summer_collection"
          ],
          "groups": [],
          "parent": null,
          "values": {
            "name": [
              {
                "data": "Top",
                "locale": "en_US",
                "scope": null
              },
              {
                "data": "Débardeur",
                "locale": "fr_FR",
                "scope": null
              }
            ],
            "description": [
              {
                "data": "Summer top",
                "locale": "en_US",
                "scope": "ecommerce"
              },
              {
                "data": "Top",
                "locale": "en_US",
                "scope": "tablet"
              },
              {
                "data": "Débardeur pour l'été",
                "locale": "fr_FR",
                "scope": "ecommerce"
              },
              {
                "data": "Débardeur",
                "locale": "fr_FR",
                "scope": "tablet"
              }
            ],
            "price": [
              {
                "locale": null,
                "scope": null,
                "data": [
                  {
                    "amount": "15.5",
                    "currency": "EUR"
                  },
                  {
                    "amount": "15",
                    "currency": "USD"
                  }
                ]
              }
            ],
            "color": [
              {
                "locale": null,
                "scope": null,
                "data": "black",
                "linked_data": {
                  "attribute": "color",
                  "code": "black",
                  "labels": {
                    "en_US": "Black",
                    "fr_FR": "Noir"
                  }
                }
              }
            ],
            "size": [
              {
                "locale": null,
                "scope": null,
                "data": "m",
                "linked_data": {
                  "attribute": "size",
                  "code": "m",
                  "labels": {
                    "en_US": "M",
                    "fr_FR": "M"
                  }
                }
              }
            ],
            "collection": [
              {
                "locale": null,
                "scope": null,
                "data": [
                  "winter_2016"
                ],
                "linked_data": {
                  "winter_2016": {
                    "attribute": "collection",
                    "code": "winter_2016",
                    "labels": {
                      "en_US": "Winter 2016",
                      "fr_FR": "Hiver 2016"
                    }
                  }
                }
              }
            ]
          },
          "created": "2016-06-23T18:24:44+02:00",
          "updated": "2016-06-25T17:56:12+02:00",
          "associations": {
            "PACK": {
              "products": [
                "sunglass"
              ],
              "product_models": [],
              "groups": []
            }
          },
          "quantified_associations": {
            "PRODUCT_SET": {
              "products": [
                {
                  "identifier": "cap",
                  "quantity": 2
                },
                {
                  "identifier": "shoes",
                  "quantity": 1
                }
              ],
              "product_models": [
                {
                  "identifier": "model-biker-jacket-leather",
                  "quantity": 2
                }
              ]
            }
          },
          "quality_scores": {
            "print": {
              "en_US": "A",
              "fr_FR": "B"
            },
            "mobile": {
              "en_US": "C",
              "fr_FR": "D"
            },
            "ecommerce": {
              "en_US": "A",
              "fr_FR": "E"
            }
          }
        }
      },
      "ProductList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string",
                "description": "Product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the product is enable",
                "default": true
              },
              "family": {
                "type": "string",
                "description": "Family code from which the product inherits its attributes and attributes requirements",
                "x-validation-rules": "It is equal to an existing family code. In the case of variant product, the given family should be the same as the product model family.",
                "default": "null only in the case of a non variant product"
              },
              "categories": {
                "type": "array",
                "description": "Codes of the categories in which the product is classified",
                "x-validation-rules": "Each string of the array is equal to an existing category code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "groups": {
                "type": "array",
                "description": "Codes of the groups to which the product belong",
                "x-validation-rules": "Each string of the array is equal to an existing group code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "parent": {
                "type": "string",
                "description": "Code of the parent product model when the product is a variant (only available since the 2.0). This parent can be modified since the 2.3.",
                "x-validation-rules": "It is equal to an existing product model code only if the product is variant otherwise it's equal to null",
                "default": "null"
              },
              "values": {
                "type": "object",
                "description": "Product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                "x-validation-rules": "Validation rules detailed in Product values section",
                "properties": {
                  "attributeCode": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "Channel code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "description": "Product value"
                        },
                        "linked_data": {
                          "type": "object",
                          "x-read-only": true,
                          "description": "Object containing labels of attribute options (only available in Serenity and when query parameter \"with_attribute_options\" is set to \"true\"). See <a href='/concepts/products.html#the-linked_data-format'>the `linked_data` format</a> section for more details.",
                          "properties": {
                            "attribute": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "labels": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "associations": {
                "type": "object",
                "description": "Several associations related to groups, product models and/or other products, grouped by association types",
                "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                "properties": {
                  "associationTypeCode": {
                    "type": "object",
                    "properties": {
                      "groups": {
                        "type": "array",
                        "description": "Array of groups codes with which the product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "products": {
                        "type": "array",
                        "description": "Array of product identifiers with which the product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "product_models": {
                        "type": "array",
                        "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "quantified_associations": {
                "type": "object",
                "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it.",
                "properties": {
                  "quantifiedAssociationTypeCode": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "description": "Array of objects containing product identifiers and quantities with which the product is in relation",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "product_models": {
                        "type": "array",
                        "description": "Array of objects containing product model codes and quantities with which the product is in relation",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "created": {
                "type": "string",
                "description": "Date of creation",
                "format": "dateTime",
                "x-immutable": true,
                "x-read-only": true
              },
              "updated": {
                "type": "string",
                "description": "Date of the last update",
                "format": "dateTime",
                "x-read-only": true
              },
              "metadata": {
                "type": "object",
                "description": "More information around the product (only available since the v2.0 in the Enterprise Edition)",
                "x-immutable": true,
                "x-read-only": true,
                "properties": {
                  "workflow_status": {
                    "description": "Status of the product regarding the user permissions (only available since the v2.0 in the Enterprise Edition)",
                    "type": "string",
                    "enum": [
                      "read_only",
                      "draft_in_progress",
                      "proposal_waiting_for_approval",
                      "working_copy"
                    ]
                  }
                }
              },
              "quality_scores": {
                "type": "object",
                "description": "Only available when query parameter \"with_quality_scores\" is set to \"true\""
              }
            },
            "example": {
              "identifier": "top",
              "enabled": true,
              "family": "tshirt",
              "categories": [
                "summer_collection"
              ],
              "groups": [],
              "parent": null,
              "values": {
                "name": [
                  {
                    "data": "Top",
                    "locale": "en_US",
                    "scope": null
                  },
                  {
                    "data": "Débardeur",
                    "locale": "fr_FR",
                    "scope": null
                  }
                ],
                "description": [
                  {
                    "data": "Summer top",
                    "locale": "en_US",
                    "scope": "ecommerce"
                  },
                  {
                    "data": "Top",
                    "locale": "en_US",
                    "scope": "tablet"
                  },
                  {
                    "data": "Débardeur pour l'été",
                    "locale": "fr_FR",
                    "scope": "ecommerce"
                  },
                  {
                    "data": "Débardeur",
                    "locale": "fr_FR",
                    "scope": "tablet"
                  }
                ],
                "price": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      {
                        "amount": "15.5",
                        "currency": "EUR"
                      },
                      {
                        "amount": "15",
                        "currency": "USD"
                      }
                    ]
                  }
                ],
                "color": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "black",
                    "linked_data": {
                      "attribute": "color",
                      "code": "black",
                      "labels": {
                        "en_US": "Black",
                        "fr_FR": "Noir"
                      }
                    }
                  }
                ],
                "size": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "m",
                    "linked_data": {
                      "attribute": "size",
                      "code": "m",
                      "labels": {
                        "en_US": "M",
                        "fr_FR": "M"
                      }
                    }
                  }
                ],
                "collection": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      "winter_2016"
                    ],
                    "linked_data": {
                      "winter_2016": {
                        "attribute": "collection",
                        "code": "winter_2016",
                        "labels": {
                          "en_US": "Winter 2016",
                          "fr_FR": "Hiver 2016"
                        }
                      }
                    }
                  }
                ]
              },
              "created": "2016-06-23T18:24:44+02:00",
              "updated": "2016-06-25T17:56:12+02:00",
              "associations": {
                "PACK": {
                  "products": [
                    "sunglass"
                  ],
                  "product_models": [],
                  "groups": []
                }
              },
              "quantified_associations": {
                "PRODUCT_SET": {
                  "products": [
                    {
                      "identifier": "cap",
                      "quantity": 2
                    },
                    {
                      "identifier": "shoes",
                      "quantity": 1
                    }
                  ],
                  "product_models": [
                    {
                      "identifier": "model-biker-jacket-leather",
                      "quantity": 2
                    }
                  ]
                }
              },
              "quality_scores": {
                "print": {
                  "en_US": "A",
                  "fr_FR": "B"
                },
                "mobile": {
                  "en_US": "C",
                  "fr_FR": "D"
                },
                "ecommerce": {
                  "en_US": "A",
                  "fr_FR": "E"
                }
              }
            }
          }
        ]
      },
      "ProductModel": {
        "type": "object",
        "required": [
          "code",
          "family_variant"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Product model code",
            "x-immutable": true
          },
          "family": {
            "type": "string",
            "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
            "x-validation-rules": "It is equal to an existing family code",
            "x-immutable": true
          },
          "family_variant": {
            "type": "string",
            "description": "Family variant code from which the product model inherits its attributes and variant attributes",
            "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
            "x-immutable": true
          },
          "parent": {
            "type": "string",
            "description": "Code of the parent product model. This parent can be modified since the 2.3.",
            "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
            "default": "null"
          },
          "categories": {
            "type": "array",
            "description": "Codes of the categories in which the product model is categorized",
            "x-validation-rules": "Each string of the array is equal to an existing category code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "values": {
            "type": "object",
            "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
            "x-validation-rules": "Validation rules detailed in Product values section",
            "properties": {
              "attributeCode": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "Channel code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "description": "Product value"
                    }
                  }
                }
              }
            }
          },
          "associations": {
            "type": "object",
            "description": "Several associations related to groups, product and/or other product models, grouped by association types",
            "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
            "properties": {
              "associationTypeCode": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "description": "Array of groups codes with which the product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "products": {
                    "type": "array",
                    "description": "Array of product identifiers with which the product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "product_models": {
                    "type": "array",
                    "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "quantified_associations": {
            "type": "object",
            "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
            "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
            "properties": {
              "quantifiedAssociationTypeCode": {
                "type": "object",
                "properties": {
                  "products": {
                    "type": "array",
                    "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                    "items": {
                      "type": "object",
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "product_models": {
                    "type": "array",
                    "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "created": {
            "type": "string",
            "description": "Date of creation",
            "format": "dateTime",
            "x-immutable": true,
            "x-read-only": true
          },
          "updated": {
            "type": "string",
            "description": "Date of the last update",
            "format": "dateTime",
            "x-read-only": true
          },
          "metadata": {
            "type": "object",
            "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
            "x-immutable": true,
            "x-read-only": true,
            "properties": {
              "workflow_status": {
                "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                "type": "string",
                "enum": [
                  "read_only",
                  "draft_in_progress",
                  "proposal_waiting_for_approval",
                  "working_copy"
                ]
              }
            }
          }
        },
        "example": {
          "code": "model-biker-jacket-leather",
          "family": "clothing",
          "family_variant": "clothing_material_size",
          "parent": "model-biker-jacket",
          "categories": [
            "summer_collection"
          ],
          "values": {
            "color": [
              {
                "locale": null,
                "scope": null,
                "data": "antique_white"
              }
            ],
            "material": [
              {
                "locale": null,
                "scope": null,
                "data": "leather"
              }
            ],
            "variation_name": [
              {
                "locale": "en_US",
                "scope": null,
                "data": "Biker jacket leather"
              }
            ],
            "name": [
              {
                "locale": "en_US",
                "scope": null,
                "data": "Biker jacket"
              }
            ],
            "collection": [
              {
                "locale": null,
                "scope": null,
                "data": [
                  "summer_2017"
                ]
              }
            ],
            "description": [
              {
                "locale": "en_US",
                "scope": "ecommerce",
                "data": "Biker jacket"
              }
            ]
          },
          "associations": {
            "PACK": {
              "products": [
                "sunglass"
              ],
              "product_models": [],
              "groups": []
            }
          },
          "quantified_associations": {
            "PRODUCT_SET": {
              "products": [
                {
                  "identifier": "top",
                  "quantity": 2
                },
                {
                  "identifier": "cap",
                  "quantity": 1
                }
              ],
              "product_models": [
                {
                  "code": "model-biker-jacket-leather",
                  "quantity": 2
                }
              ]
            }
          },
          "created": "2017-10-02T15:03:55+02:00",
          "updated": "2017-10-02T15:03:55+02:00"
        }
      },
      "ProductModelList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code",
              "family_variant"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Product model code",
                "x-immutable": true
              },
              "family": {
                "type": "string",
                "description": "Family code  from which the product inherits its attributes and attributes requirements (since the 3.2)",
                "x-validation-rules": "It is equal to an existing family code",
                "x-immutable": true
              },
              "family_variant": {
                "type": "string",
                "description": "Family variant code from which the product model inherits its attributes and variant attributes",
                "x-validation-rules": "It is equal to an existing family variant code that belong to the family given in the `family` field",
                "x-immutable": true
              },
              "parent": {
                "type": "string",
                "description": "Code of the parent product model. This parent can be modified since the 2.3.",
                "x-validation-rules": "&bull; It is equal to an existing product model code&#10;&bull; This product model has the same family variant as the one given in the `family_variant field`",
                "default": "null"
              },
              "categories": {
                "type": "array",
                "description": "Codes of the categories in which the product model is categorized",
                "x-validation-rules": "Each string of the array is equal to an existing category code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "values": {
                "type": "object",
                "description": "Product model attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                "x-validation-rules": "Validation rules detailed in Product values section",
                "properties": {
                  "attributeCode": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "Channel code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "description": "Product value"
                        }
                      }
                    }
                  }
                }
              },
              "associations": {
                "type": "object",
                "description": "Several associations related to groups, product and/or other product models, grouped by association types",
                "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Each string in the array of the property `product_models` is the code of an existing product model.",
                "properties": {
                  "associationTypeCode": {
                    "type": "object",
                    "properties": {
                      "groups": {
                        "type": "array",
                        "description": "Array of groups codes with which the product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "products": {
                        "type": "array",
                        "description": "Array of product identifiers with which the product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "product_models": {
                        "type": "array",
                        "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "quantified_associations": {
                "type": "object",
                "description": "Several quantified associations related to products and/or product models, grouped by quantified association types (only available in Serenity)",
                "x-validation-rules": "&bull; The `quantifiedAssociationTypeCode` is the code of an existing association type which provides quantity information. &#10;&bull; Each object in the array of the property `products` contains the identifier of an existing product and the quantity of it. &#10;&bull; Each object in the array of the property `product_models` contains the code of an existing product model and the quantity of it.",
                "properties": {
                  "quantifiedAssociationTypeCode": {
                    "type": "object",
                    "properties": {
                      "products": {
                        "type": "array",
                        "description": "Array of objects containing product identifiers and quantities with which the product model is in relation",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "product_models": {
                        "type": "array",
                        "description": "Array of objects containing product model codes and quantities with which the product model is in relation",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "quantity": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "created": {
                "type": "string",
                "description": "Date of creation",
                "format": "dateTime",
                "x-immutable": true,
                "x-read-only": true
              },
              "updated": {
                "type": "string",
                "description": "Date of the last update",
                "format": "dateTime",
                "x-read-only": true
              },
              "metadata": {
                "type": "object",
                "description": "More information around the product model (only available since the v2.3 in the Enterprise Edition)",
                "x-immutable": true,
                "x-read-only": true,
                "properties": {
                  "workflow_status": {
                    "description": "Status of the product model regarding the user permissions (only available since the v2.3 in the Enterprise Edition)",
                    "type": "string",
                    "enum": [
                      "read_only",
                      "draft_in_progress",
                      "proposal_waiting_for_approval",
                      "working_copy"
                    ]
                  }
                }
              }
            },
            "example": {
              "code": "model-biker-jacket-leather",
              "family": "clothing",
              "family_variant": "clothing_material_size",
              "parent": "model-biker-jacket",
              "categories": [
                "summer_collection"
              ],
              "values": {
                "color": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "antique_white"
                  }
                ],
                "material": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "leather"
                  }
                ],
                "variation_name": [
                  {
                    "locale": "en_US",
                    "scope": null,
                    "data": "Biker jacket leather"
                  }
                ],
                "name": [
                  {
                    "locale": "en_US",
                    "scope": null,
                    "data": "Biker jacket"
                  }
                ],
                "collection": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      "summer_2017"
                    ]
                  }
                ],
                "description": [
                  {
                    "locale": "en_US",
                    "scope": "ecommerce",
                    "data": "Biker jacket"
                  }
                ]
              },
              "associations": {
                "PACK": {
                  "products": [
                    "sunglass"
                  ],
                  "product_models": [],
                  "groups": []
                }
              },
              "quantified_associations": {
                "PRODUCT_SET": {
                  "products": [
                    {
                      "identifier": "top",
                      "quantity": 2
                    },
                    {
                      "identifier": "cap",
                      "quantity": 1
                    }
                  ],
                  "product_models": [
                    {
                      "code": "model-biker-jacket-leather",
                      "quantity": 2
                    }
                  ]
                }
              },
              "created": "2017-10-02T15:03:55+02:00",
              "updated": "2017-10-02T15:03:55+02:00"
            }
          }
        ]
      },
      "PublishedProduct": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the published product is enable",
            "default": true
          },
          "family": {
            "type": "string",
            "description": "Family code from which the published product inherits its attributes and attributes requirements",
            "x-validation-rules": "It is equal to an existing family code",
            "default": "null"
          },
          "categories": {
            "type": "array",
            "description": "Codes of the categories in which the published product is classified",
            "x-validation-rules": "Each string of the array is equal to an existing category code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "groups": {
            "type": "array",
            "description": "Codes of the groups to which the published product belong",
            "x-validation-rules": "Each string of the array is equal to an existing group code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "values": {
            "type": "object",
            "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
            "x-validation-rules": "Validation rules detailed in Product values section",
            "properties": {
              "attributeCode": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "Channel code of the product value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the product value"
                    },
                    "data": {
                      "type": "object",
                      "description": "Product value"
                    }
                  }
                }
              }
            }
          },
          "associations": {
            "type": "object",
            "description": "Several associations related to groups and/or other published products, grouped by association types",
            "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier.",
            "properties": {
              "associationTypeCode": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "description": "Array of groups codes with which the published product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "products": {
                    "type": "array",
                    "description": "Array of published product identifiers with which the published product is in relation",
                    "items": {
                      "type": "string"
                    }
                  },
                  "product_models": {
                    "type": "array",
                    "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "created": {
            "type": "string",
            "description": "Date of creation",
            "format": "dateTime",
            "x-immutable": true,
            "x-read-only": true
          },
          "updated": {
            "type": "string",
            "description": "Date of the last update",
            "format": "dateTime",
            "x-read-only": true
          }
        },
        "example": {
          "identifier": "top",
          "enabled": true,
          "family": "tshirt",
          "categories": [
            "summer_collection"
          ],
          "groups": [],
          "values": {
            "name": [
              {
                "data": "Top",
                "locale": "en_US",
                "scope": null
              },
              {
                "data": "Débardeur",
                "locale": "fr_FR",
                "scope": null
              }
            ],
            "description": [
              {
                "data": "Summer top",
                "locale": "en_US",
                "scope": "ecommerce"
              },
              {
                "data": "Top",
                "locale": "en_US",
                "scope": "tablet"
              },
              {
                "data": "Débardeur pour l'été",
                "locale": "fr_FR",
                "scope": "ecommerce"
              },
              {
                "data": "Débardeur",
                "locale": "fr_FR",
                "scope": "tablet"
              }
            ],
            "price": [
              {
                "locale": null,
                "scope": null,
                "data": [
                  {
                    "amount": "15.5",
                    "currency": "EUR"
                  },
                  {
                    "amount": "15",
                    "currency": "USD"
                  }
                ]
              }
            ],
            "color": [
              {
                "locale": null,
                "scope": null,
                "data": "black"
              }
            ],
            "size": [
              {
                "locale": null,
                "scope": null,
                "data": "m"
              }
            ]
          },
          "created": "2016-06-23T18:24:44+02:00",
          "updated": "2016-06-25T17:56:12+02:00",
          "associations": {
            "PACK": {
              "products": [
                "sunglass"
              ],
              "product_models": [],
              "groups": []
            }
          }
        }
      },
      "PublishedProductList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string",
                "description": "Published product identifier, i.e. the value of the only `pim_catalog_identifier` attribute"
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the published product is enable",
                "default": true
              },
              "family": {
                "type": "string",
                "description": "Family code from which the published product inherits its attributes and attributes requirements",
                "x-validation-rules": "It is equal to an existing family code",
                "default": "null"
              },
              "categories": {
                "type": "array",
                "description": "Codes of the categories in which the published product is classified",
                "x-validation-rules": "Each string of the array is equal to an existing category code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "groups": {
                "type": "array",
                "description": "Codes of the groups to which the published product belong",
                "x-validation-rules": "Each string of the array is equal to an existing group code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "values": {
                "type": "object",
                "description": "Published product attributes values, see <a href='/concepts/products.html#focus-on-the-products-values'>Product values</a> section for more details",
                "x-validation-rules": "Validation rules detailed in Product values section",
                "properties": {
                  "attributeCode": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "Channel code of the product value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the product value"
                        },
                        "data": {
                          "type": "object",
                          "description": "Product value"
                        }
                      }
                    }
                  }
                }
              },
              "associations": {
                "type": "object",
                "description": "Several associations related to groups and/or other published products, grouped by association types",
                "x-validation-rules": "&bull; The `associationTypeCode` is the code of an existing association type. &#10;&bull; Each string in the array of the property `groups` is the code of an existing group. &#10;&bull; Each string in the array of the property `products` is the identifier of an existing product. &#10;&bull; Identifiers used in the array of the property `products` cannot be equal to the published product identifier.",
                "properties": {
                  "associationTypeCode": {
                    "type": "object",
                    "properties": {
                      "groups": {
                        "type": "array",
                        "description": "Array of groups codes with which the published product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "products": {
                        "type": "array",
                        "description": "Array of published product identifiers with which the published product is in relation",
                        "items": {
                          "type": "string"
                        }
                      },
                      "product_models": {
                        "type": "array",
                        "description": "Array of product model codes with which the product is in relation (only available since the v2.1)",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "created": {
                "type": "string",
                "description": "Date of creation",
                "format": "dateTime",
                "x-immutable": true,
                "x-read-only": true
              },
              "updated": {
                "type": "string",
                "description": "Date of the last update",
                "format": "dateTime",
                "x-read-only": true
              }
            },
            "example": {
              "identifier": "top",
              "enabled": true,
              "family": "tshirt",
              "categories": [
                "summer_collection"
              ],
              "groups": [],
              "values": {
                "name": [
                  {
                    "data": "Top",
                    "locale": "en_US",
                    "scope": null
                  },
                  {
                    "data": "Débardeur",
                    "locale": "fr_FR",
                    "scope": null
                  }
                ],
                "description": [
                  {
                    "data": "Summer top",
                    "locale": "en_US",
                    "scope": "ecommerce"
                  },
                  {
                    "data": "Top",
                    "locale": "en_US",
                    "scope": "tablet"
                  },
                  {
                    "data": "Débardeur pour l'été",
                    "locale": "fr_FR",
                    "scope": "ecommerce"
                  },
                  {
                    "data": "Débardeur",
                    "locale": "fr_FR",
                    "scope": "tablet"
                  }
                ],
                "price": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": [
                      {
                        "amount": "15.5",
                        "currency": "EUR"
                      },
                      {
                        "amount": "15",
                        "currency": "USD"
                      }
                    ]
                  }
                ],
                "color": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "black"
                  }
                ],
                "size": [
                  {
                    "locale": null,
                    "scope": null,
                    "data": "m"
                  }
                ]
              },
              "created": "2016-06-23T18:24:44+02:00",
              "updated": "2016-06-25T17:56:12+02:00",
              "associations": {
                "PACK": {
                  "products": [
                    "sunglass"
                  ],
                  "product_models": [],
                  "groups": []
                }
              }
            }
          }
        ]
      },
      "ReferenceEntity": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "x-read-only": true,
                "properties": {
                  "image_download": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI to download the binaries of the reference entity image file"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Reference entity code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "description": "Reference entity labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Reference entity label for the locale `localeCode`"
                  }
                }
              },
              "image": {
                "type": "string",
                "description": "Code of the reference entity image",
                "default": null
              }
            },
            "example": {
              "code": "brands",
              "labels": {
                "en_US": "Brands",
                "fr_FR": "Marques"
              },
              "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
            }
          }
        ],
        "example": {
          "_links": {
            "image_download": {
              "href": "https://demo.akeneo.com/api/rest/v1/reference-entities-media-files/0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
            }
          },
          "code": "brands",
          "labels": {
            "en_US": "Brands",
            "fr_FR": "Marques"
          },
          "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
        }
      },
      "ReferenceEntityList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  },
                  "image_download": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI to download the binaries of the reference entity image file"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Reference entity code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "description": "Reference entity labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Reference entity label for the locale `localeCode`"
                  }
                }
              },
              "image": {
                "type": "string",
                "description": "Code of the reference entity image",
                "default": null
              }
            },
            "example": {
              "code": "brands",
              "labels": {
                "en_US": "Brands",
                "fr_FR": "Marques"
              },
              "image": "0/2/d/6/54d81dc888ba1501a8g765f3ab5797569f3bv756c_ref_img.png"
            }
          }
        ]
      },
      "ReferenceEntityAttribute": {
        "type": "object",
        "required": [
          "code",
          "type"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute code",
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Attribute labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Attribute label for the locale `localeCode`"
              }
            }
          },
          "type": {
            "type": "string",
            "description": "Attribute type",
            "enum": [
              "text",
              "image",
              "number",
              "single_option",
              "multiple_options",
              "reference_entity_single_link",
              "reference_entity_multiple_links"
            ],
            "x-immutable": true
          },
          "value_per_locale": {
            "type": "boolean",
            "description": "Whether the attribute is localizable, i.e. can have one value by locale",
            "default": false,
            "x-immutable": true
          },
          "value_per_channel": {
            "type": "boolean",
            "description": "Whether the attribute is scopable, i.e. can have one value by channel",
            "default": false,
            "x-immutable": true
          },
          "is_required_for_completeness": {
            "type": "boolean",
            "description": "Whether the attribute should be part of the record's completeness calculation",
            "default": false
          },
          "max_characters": {
            "type": "integer",
            "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
            "x-warning": "Only for `text` attribute type"
          },
          "is_textarea": {
            "type": "boolean",
            "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
            "default": false,
            "x-warning": "Only for `text` attribute type"
          },
          "is_rich_text_editor": {
            "type": "boolean",
            "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
            "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
            "x-warning": "Only for `text` attribute type"
          },
          "validation_rule": {
            "type": "string",
            "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
            "default": "none",
            "x-warning": "Only for `text` attribute type",
            "enum": [
              "email",
              "url",
              "regexp",
              "none"
            ]
          },
          "validation_regexp": {
            "type": "string",
            "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
            "default": null,
            "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
            "x-warning": "Only for `text` attribute type"
          },
          "allowed_extensions": {
            "type": "array",
            "description": "Extensions allowed when the attribute type is `image`",
            "default": [],
            "x-warning": "Only for `image` attribute type",
            "items": {
              "type": "string"
            }
          },
          "max_file_size": {
            "type": "string",
            "description": "Max file size in MB when the attribute type is `image`",
            "default": null,
            "x-warning": "Only for `image` attribute type"
          },
          "reference_entity_code": {
            "type": "string",
            "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
            "default": null,
            "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
            "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type",
            "x-immutable": true
          },
          "decimals_allowed": {
            "type": "boolean",
            "description": "Whether decimals are allowed when the attribute type is `number`",
            "default": false,
            "x-warning": "Only for `number` attribute type"
          },
          "min_value": {
            "type": "string",
            "description": "Minimum value allowed when the attribute type is `number`",
            "default": null,
            "x-validation-rules": "The minimum value must be lower than the maximum value",
            "x-warning": "Only for `number` attribute type"
          },
          "max_value": {
            "type": "string",
            "description": "Maximum value allowed when the attribute type is `number`",
            "default": null,
            "x-validation-rules": "The maximum value must be greater than the minimum value",
            "x-warning": "Only for `number` attribute type"
          }
        },
        "example": {
          "code": "description",
          "labels": {
            "en_US": "Description",
            "fr_FR": "Description"
          },
          "type": "text",
          "value_per_locale": true,
          "value_per_channel": false,
          "is_required_for_completeness": true,
          "max_characters": null,
          "is_textarea": true,
          "is_rich_text_editor": true,
          "validation_rule": "none",
          "validation_regexp": null
        }
      },
      "ReferenceEntityAttributeList": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "code",
            "type"
          ],
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
              "default": {},
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              }
            },
            "type": {
              "type": "string",
              "description": "Attribute type",
              "enum": [
                "text",
                "image",
                "number",
                "single_option",
                "multiple_options",
                "reference_entity_single_link",
                "reference_entity_multiple_links"
              ],
              "x-immutable": true
            },
            "value_per_locale": {
              "type": "boolean",
              "description": "Whether the attribute is localizable, i.e. can have one value by locale",
              "default": false,
              "x-immutable": true
            },
            "value_per_channel": {
              "type": "boolean",
              "description": "Whether the attribute is scopable, i.e. can have one value by channel",
              "default": false,
              "x-immutable": true
            },
            "is_required_for_completeness": {
              "type": "boolean",
              "description": "Whether the attribute should be part of the record's completeness calculation",
              "default": false
            },
            "max_characters": {
              "type": "integer",
              "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
              "x-warning": "Only for `text` attribute type"
            },
            "is_textarea": {
              "type": "boolean",
              "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
              "default": false,
              "x-warning": "Only for `text` attribute type"
            },
            "is_rich_text_editor": {
              "type": "boolean",
              "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
              "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
              "x-warning": "Only for `text` attribute type"
            },
            "validation_rule": {
              "type": "string",
              "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
              "default": "none",
              "x-warning": "Only for `text` attribute type",
              "enum": [
                "email",
                "url",
                "regexp",
                "none"
              ]
            },
            "validation_regexp": {
              "type": "string",
              "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
              "default": null,
              "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
              "x-warning": "Only for `text` attribute type"
            },
            "allowed_extensions": {
              "type": "array",
              "description": "Extensions allowed when the attribute type is `image`",
              "default": [],
              "x-warning": "Only for `image` attribute type",
              "items": {
                "type": "string"
              }
            },
            "max_file_size": {
              "type": "string",
              "description": "Max file size in MB when the attribute type is `image`",
              "default": null,
              "x-warning": "Only for `image` attribute type"
            },
            "reference_entity_code": {
              "type": "string",
              "description": "Code of the linked reference entity when the attribute type is `reference_entity_single_link` or `reference_entity_multiple_links`",
              "default": null,
              "x-validation-rules": "Required when the attribute type is either `reference_entity_single_link` or `reference_entity_multiple_links`",
              "x-warning": "Only for `reference_entity_single_link` and `reference_entity_multiple_links` attribute type",
              "x-immutable": true
            },
            "decimals_allowed": {
              "type": "boolean",
              "description": "Whether decimals are allowed when the attribute type is `number`",
              "default": false,
              "x-warning": "Only for `number` attribute type"
            },
            "min_value": {
              "type": "string",
              "description": "Minimum value allowed when the attribute type is `number`",
              "default": null,
              "x-validation-rules": "The minimum value must be lower than the maximum value",
              "x-warning": "Only for `number` attribute type"
            },
            "max_value": {
              "type": "string",
              "description": "Maximum value allowed when the attribute type is `number`",
              "default": null,
              "x-validation-rules": "The maximum value must be greater than the minimum value",
              "x-warning": "Only for `number` attribute type"
            }
          },
          "example": {
            "code": "description",
            "labels": {
              "en_US": "Description",
              "fr_FR": "Description"
            },
            "type": "text",
            "value_per_locale": true,
            "value_per_channel": false,
            "is_required_for_completeness": true,
            "max_characters": null,
            "is_textarea": true,
            "is_rich_text_editor": true,
            "validation_rule": "none",
            "validation_regexp": null
          }
        }
      },
      "ReferenceEntityAttributeOption": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute's option code",
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Attribute labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Attribute label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "global_nomad",
          "labels": {
            "en_US": "Global Nomad",
            "fr_FR": "Nomade du Monde"
          }
        }
      },
      "ReferenceEntityAttributeOptionList": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute's option code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
              "default": {},
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              }
            }
          },
          "example": {
            "code": "global_nomad",
            "labels": {
              "en_US": "Global Nomad",
              "fr_FR": "Nomade du Monde"
            }
          }
        }
      },
      "ReferenceEntityRecord": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the record",
            "x-immutable": true
          },
          "values": {
            "type": "object",
            "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
            "x-validation-rules": "Validation rules detailed in Reference entity record values section",
            "properties": {
              "attributeCode": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "channel": {
                      "type": "string",
                      "description": "Channel code of the reference entity record value"
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the reference entity record value"
                    },
                    "data": {
                      "type": "object",
                      "description": "Reference entity record value"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "kartell",
          "values": {
            "label": [
              {
                "locale": "en_US",
                "channel": null,
                "data": "Kartell"
              }
            ],
            "image": [
              {
                "locale": null,
                "channel": null,
                "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
              }
            ],
            "description": [
              {
                "locale": "en_US",
                "channel": null,
                "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
              },
              {
                "locale": "fr_FR",
                "channel": null,
                "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
              }
            ],
            "country": [
              {
                "locale": null,
                "channel": null,
                "data": "italy"
              }
            ],
            "collection_overview": [
              {
                "locale": null,
                "channel": null,
                "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
              }
            ],
            "creation_year": [
              {
                "locale": null,
                "channel": null,
                "data": "1949"
              }
            ]
          }
        }
      },
      "ReferenceEntityRecordList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Code of the record",
                "x-immutable": true
              },
              "values": {
                "type": "object",
                "description": "Record attributes values, see <a href='/concepts/reference-entities.html#focus-on-the-reference-entity-record-values'>Reference entity record values</a> section for more details",
                "x-validation-rules": "Validation rules detailed in Reference entity record values section",
                "properties": {
                  "attributeCode": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "string",
                          "description": "Channel code of the reference entity record value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the reference entity record value"
                        },
                        "data": {
                          "type": "object",
                          "description": "Reference entity record value"
                        }
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "code": "kartell",
              "values": {
                "label": [
                  {
                    "locale": "en_US",
                    "channel": null,
                    "data": "Kartell"
                  }
                ],
                "image": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "0/c/b/0/0cb0c0e115dedba676f8d1ad8343ec207ab54c7b_image.jpg"
                  }
                ],
                "description": [
                  {
                    "locale": "en_US",
                    "channel": null,
                    "data": "Kartell, the Italian furniture company that sells modern and remarkable pieces of furnitures."
                  },
                  {
                    "locale": "fr_FR",
                    "channel": null,
                    "data": "Kartell, l'éditeur de meuble italien spécialisé dans la signature de belle pièces au design contemporain."
                  }
                ],
                "country": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "italy"
                  }
                ],
                "collection_overview": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "5/1/d/8/51d81dc778ba1501a8f998f3ab5797569f3b9e25_img.png"
                  }
                ],
                "creation_year": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "1949"
                  }
                ]
              }
            }
          }
        ]
      },
      "Category": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Category code",
            "x-immutable": true
          },
          "parent": {
            "type": "string",
            "description": "Category code of the parent's category",
            "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself.",
            "default": "null"
          },
          "labels": {
            "type": "object",
            "description": "Category labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Category label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "winter_collection",
          "parent": null,
          "labels": {
            "en_US": "Winter collection",
            "fr_FR": "Collection hiver"
          }
        }
      },
      "CategoryList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Category code",
                "x-immutable": true
              },
              "parent": {
                "type": "string",
                "description": "Category code of the parent's category",
                "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself.",
                "default": "null"
              },
              "labels": {
                "type": "object",
                "description": "Category labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Category label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "winter_collection",
              "parent": null,
              "labels": {
                "en_US": "Winter collection",
                "fr_FR": "Collection hiver"
              }
            }
          }
        ]
      },
      "MeasureFamily": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Measure family code",
            "x-immutable": true
          },
          "standard": {
            "type": "string",
            "description": "Measure family standard",
            "x-immutable": true
          },
          "units": {
            "type": "array",
            "description": "Family units",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Measure code",
                  "x-immutable": true
                },
                "convert": {
                  "type": "object",
                  "description": "Mathematic operation to convert the unit into the standard unit"
                },
                "symbol": {
                  "type": "string",
                  "description": "Measure symbol",
                  "x-immutable": true
                }
              }
            }
          }
        },
        "example": {
          "code": "Area",
          "standard": "SQUARE_METER",
          "units": [
            {
              "code": "SQUARE_MILLIMETER",
              "convert": {
                "mul": "0.001"
              },
              "symbol": "mm²"
            },
            {
              "code": "SQUARE_CENTIMETER",
              "convert": {
                "mul": "0.001"
              },
              "symbol": "cm²"
            }
          ]
        }
      },
      "MeasureFamilyList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Measure family code",
                "x-immutable": true
              },
              "standard": {
                "type": "string",
                "description": "Measure family standard",
                "x-immutable": true
              },
              "units": {
                "type": "array",
                "description": "Family units",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Measure code",
                      "x-immutable": true
                    },
                    "convert": {
                      "type": "object",
                      "description": "Mathematic operation to convert the unit into the standard unit"
                    },
                    "symbol": {
                      "type": "string",
                      "description": "Measure symbol",
                      "x-immutable": true
                    }
                  }
                }
              }
            },
            "example": {
              "code": "Area",
              "standard": "SQUARE_METER",
              "units": [
                {
                  "code": "SQUARE_MILLIMETER",
                  "convert": {
                    "mul": "0.001"
                  },
                  "symbol": "mm²"
                },
                {
                  "code": "SQUARE_CENTIMETER",
                  "convert": {
                    "mul": "0.001"
                  },
                  "symbol": "cm²"
                }
              ]
            }
          }
        ]
      },
      "MeasurementFamily": {
        "type": "object",
        "required": [
          "code",
          "standard_unit_code",
          "units"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Measurement family code",
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Measurement family labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Measurement family label for the locale `localeCode`"
              }
            }
          },
          "standard_unit_code": {
            "type": "string",
            "description": "Unit code used as the standard unit for this measurement family",
            "x-immutable": true,
            "x-validation-rules": "The unit code exists in the list of the property `units`"
          },
          "units": {
            "type": "object",
            "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
            "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family",
            "properties": {
              "unitCode": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-immutable": true
                  },
                  "labels": {
                    "type": "object",
                    "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                    "default": {},
                    "properties": {
                      "localeCode": {
                        "type": "string",
                        "description": "Unit label for the locale `localeCode`"
                      }
                    }
                  },
                  "convert_from_standard": {
                    "type": "array",
                    "description": "Calculation to convert the unit into the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string",
                          "description": "Operator for a conversion operation to convert the unit in the standard unit",
                          "x-validation-rules": "The operator is one of the following values",
                          "enum": [
                            "mul",
                            "div",
                            "add",
                            "sub"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "description": "Value for a conversion operation to convert the unit in the standard unit"
                        }
                      }
                    }
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "AREA",
          "labels": {
            "en_US": "Area",
            "fr_FR": "Surface"
          },
          "standard_unit_code": "SQUARE_METER",
          "units": {
            "SQUARE_MILLIMETER": {
              "code": "SQUARE_MILLIMETER",
              "labels": {
                "en_US": "Square millimeter",
                "fr_FR": "Millimètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "0.000001"
                }
              ],
              "symbol": "mm²"
            },
            "SQUARE_CENTIMETER": {
              "code": "SQUARE_CENTIMETER",
              "labels": {
                "en_US": "Square centimeter",
                "fr_FR": "Centimètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "0.0001"
                }
              ],
              "symbol": "cm²"
            },
            "SQUARE_METER": {
              "code": "SQUARE_METER",
              "labels": {
                "en_US": "Square meter",
                "fr_FR": "Mètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "1"
                }
              ],
              "symbol": "m²"
            }
          }
        }
      },
      "MeasurementFamilyList": {
        "type": "object",
        "required": [
          "code",
          "standard_unit_code",
          "units"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Measurement family code",
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Measurement family labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Measurement family label for the locale `localeCode`"
              }
            }
          },
          "standard_unit_code": {
            "type": "string",
            "description": "Unit code used as the standard unit for this measurement family",
            "x-immutable": true,
            "x-validation-rules": "The unit code exists in the list of the property `units`"
          },
          "units": {
            "type": "object",
            "description": "Measurement units for this family with their conversion operations. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
            "x-validation-rules": "A unit can't be added when a product attribute is linked to this measurement family",
            "properties": {
              "unitCode": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Measurement unit code. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-immutable": true
                  },
                  "labels": {
                    "type": "object",
                    "description": "Unit labels for each locale. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                    "default": {},
                    "properties": {
                      "localeCode": {
                        "type": "string",
                        "description": "Unit label for the locale `localeCode`"
                      }
                    }
                  },
                  "convert_from_standard": {
                    "type": "array",
                    "description": "Calculation to convert the unit into the standard unit. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>.",
                    "x-validation-rules": "&bull; The conversion operations can't be updated when a product attribute is linked to this measurement family &#10;&bull; At least one conversion operation per unit is required",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string",
                          "description": "Operator for a conversion operation to convert the unit in the standard unit",
                          "x-validation-rules": "The operator is one of the following values",
                          "enum": [
                            "mul",
                            "div",
                            "add",
                            "sub"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "description": "Value for a conversion operation to convert the unit in the standard unit"
                        }
                      }
                    }
                  },
                  "symbol": {
                    "type": "string",
                    "description": "Measurement unit symbol. More details <a href='/concepts/target-market-settings.html#focus-on-the-units'>here</a>."
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "AREA",
          "labels": {
            "en_US": "Area",
            "fr_FR": "Surface"
          },
          "standard_unit_code": "SQUARE_METER",
          "units": {
            "SQUARE_MILLIMETER": {
              "code": "SQUARE_MILLIMETER",
              "labels": {
                "en_US": "Square millimeter",
                "fr_FR": "Millimètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "0.000001"
                }
              ],
              "symbol": "mm²"
            },
            "SQUARE_CENTIMETER": {
              "code": "SQUARE_CENTIMETER",
              "labels": {
                "en_US": "Square centimeter",
                "fr_FR": "Centimètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "0.0001"
                }
              ],
              "symbol": "cm²"
            },
            "SQUARE_METER": {
              "code": "SQUARE_METER",
              "labels": {
                "en_US": "Square meter",
                "fr_FR": "Mètre carré"
              },
              "convert_from_standard": [
                {
                  "operator": "mul",
                  "value": "1"
                }
              ],
              "symbol": "m²"
            }
          }
        }
      },
      "Family": {
        "type": "object",
        "required": [
          "code",
          "attribute_as_label"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Family code",
            "x-immutable": true
          },
          "attribute_as_label": {
            "type": "string",
            "description": "Attribute code used as label",
            "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
          },
          "attribute_as_image": {
            "type": "string",
            "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
            "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
            "default": "null"
          },
          "attributes": {
            "type": "array",
            "description": "Attributes codes that compose the family",
            "x-validation-rules": "Each string of the array is an existing attribute code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "attribute_requirements": {
            "type": "object",
            "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
            "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel",
            "properties": {
              "channelCode": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                }
              }
            }
          },
          "labels": {
            "type": "object",
            "description": "Family labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Family label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "caps",
          "attributes": [
            "sku",
            "name",
            "description",
            "price",
            "color",
            "picture"
          ],
          "attribute_as_label": "name",
          "attribute_as_image": "picture",
          "attribute_requirements": {
            "ecommerce": [
              "sku",
              "name",
              "description",
              "price",
              "color"
            ],
            "tablet": [
              "sku",
              "name",
              "description",
              "price"
            ]
          },
          "labels": {
            "en_US": "Caps",
            "fr_FR": "Casquettes"
          }
        }
      },
      "FamilyList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code",
              "attribute_as_label"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Family code",
                "x-immutable": true
              },
              "attribute_as_label": {
                "type": "string",
                "description": "Attribute code used as label",
                "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is either `pim_catalog_identifier` or `pim_catalog_text`"
              },
              "attribute_as_image": {
                "type": "string",
                "description": "Attribute code used as the main picture in the user interface (only since v2.0)",
                "x-validation-rules": "&bull; It is equal to an existing attribute code &#10;&bull; This attribute code is in the array of the property `attributes` &#10;&bull; The type of this attribute is `pim_catalog_image`. Since v2.1, you can also use a `pim_assets_collection` attribute type",
                "default": "null"
              },
              "attributes": {
                "type": "array",
                "description": "Attributes codes that compose the family",
                "x-validation-rules": "Each string of the array is an existing attribute code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "attribute_requirements": {
                "type": "object",
                "description": "Attributes codes of the family that are required for the completeness calculation for each channel",
                "x-validation-rules": "&bull; Each string of these arrays is an existing attribute code &#10;&bull; These attribute codes are in the array of the property `attributes` &#10;&bull; The `channelCode` is the code of an existing and activated channel",
                "properties": {
                  "channelCode": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Attributes codes of the family that are required for the completeness calculation for the channel `channelCode`"
                    }
                  }
                }
              },
              "labels": {
                "type": "object",
                "description": "Family labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Family label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "caps",
              "attributes": [
                "sku",
                "name",
                "description",
                "price",
                "color",
                "picture"
              ],
              "attribute_as_label": "name",
              "attribute_as_image": "picture",
              "attribute_requirements": {
                "ecommerce": [
                  "sku",
                  "name",
                  "description",
                  "price",
                  "color"
                ],
                "tablet": [
                  "sku",
                  "name",
                  "description",
                  "price"
                ]
              },
              "labels": {
                "en_US": "Caps",
                "fr_FR": "Casquettes"
              }
            }
          }
        ]
      },
      "FamilyVariant": {
        "type": "object",
        "required": [
          "code",
          "variant_attribute_sets"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Family variant code",
            "x-immutable": true
          },
          "variant_attribute_sets": {
            "type": "array",
            "description": "Attributes distribution according to the enrichment level",
            "items": {
              "type": "object",
              "required": [
                "level",
                "axes"
              ],
              "description": "Enrichment level",
              "properties": {
                "level": {
                  "type": "integer",
                  "description": "Enrichment level",
                  "x-immutable": true,
                  "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well."
                },
                "axes": {
                  "type": "array",
                  "description": "Codes of attributes used as variant axes",
                  "x-immutable": true,
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level"
                },
                "attributes": {
                  "type": "array",
                  "description": "Codes of attributes bind to this enrichment level",
                  "items": {
                    "type": "string"
                  },
                  "default": [],
                  "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                }
              }
            }
          },
          "labels": {
            "type": "object",
            "description": "Family variant labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Family variant label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "shoesVariant",
          "labels": {
            "en_US": "Shoes variant",
            "fr_FR": "Variante de chaussures"
          },
          "variant_attribute_sets": [
            {
              "level": 1,
              "attributes": [
                "color",
                "material"
              ],
              "axes": [
                "color"
              ]
            },
            {
              "level": 2,
              "attributes": [
                "sku",
                "size"
              ],
              "axes": [
                "size"
              ]
            }
          ]
        }
      },
      "FamilyVariantList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code",
              "variant_attribute_sets"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Family variant code",
                "x-immutable": true
              },
              "variant_attribute_sets": {
                "type": "array",
                "description": "Attributes distribution according to the enrichment level",
                "items": {
                  "type": "object",
                  "required": [
                    "level",
                    "axes"
                  ],
                  "description": "Enrichment level",
                  "properties": {
                    "level": {
                      "type": "integer",
                      "description": "Enrichment level",
                      "x-immutable": true,
                      "x-validation-rules": "&bull; Number representing the level of the attribute set. &#10;&bull; It should be equal to 1 or 2. &#10;&bull; If you specify the level 2, you have to specify the level 1 as well."
                    },
                    "axes": {
                      "type": "array",
                      "description": "Codes of attributes used as variant axes",
                      "x-immutable": true,
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "x-validation-rules": "&bull; Should be an array of maximum 5 existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Only the following attribute types are allowed: `simple select`, `multi select`, `reference data`, `metric`, `boolean` &#10;&bull; Attributes cannot be scopable, nor localizable nor locale specific &#10;&bull; Attributes used as axes in one level cannot be used as axes or as attributes in the other level"
                    },
                    "attributes": {
                      "type": "array",
                      "description": "Codes of attributes bind to this enrichment level",
                      "items": {
                        "type": "string"
                      },
                      "default": [],
                      "x-validation-rules": "&bull; Should be an array of existing attribute codes &#10;&bull; These attributes should belong to the family of the family variant &#10;&bull; Attributes used as attribute in one level cannot be used as axes or as attributes in the other level &#10;&bull; Attributes that are `unique value` or `identifier` are automatically distributed to the lower level."
                    }
                  }
                }
              },
              "labels": {
                "type": "object",
                "description": "Family variant labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Family variant label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "shoesVariant",
              "labels": {
                "en_US": "Shoes variant",
                "fr_FR": "Variante de chaussures"
              },
              "variant_attribute_sets": [
                {
                  "level": 1,
                  "attributes": [
                    "color",
                    "material"
                  ],
                  "axes": [
                    "color"
                  ]
                },
                {
                  "level": 2,
                  "attributes": [
                    "sku",
                    "size"
                  ],
                  "axes": [
                    "size"
                  ]
                }
              ]
            }
          }
        ]
      },
      "Attribute": {
        "type": "object",
        "required": [
          "code",
          "type",
          "group"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute code",
            "x-immutable": true
          },
          "type": {
            "type": "string",
            "description": "Attribute type",
            "x-validation-rules": "The type is one of the following values",
            "enum": [
              "pim_catalog_identifier",
              "pim_catalog_metric",
              "pim_catalog_number",
              "pim_catalog_reference_data_multi_select",
              "pim_catalog_reference_data_simple_select",
              "pim_catalog_simpleselect",
              "pim_catalog_multiselect",
              "pim_catalog_date",
              "pim_catalog_textarea",
              "pim_catalog_text",
              "pim_catalog_file",
              "pim_catalog_image",
              "pim_catalog_price_collection",
              "pim_catalog_boolean",
              "akeneo_reference_entity",
              "akeneo_reference_entity_collection",
              "pim_catalog_asset_collection"
            ],
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Attribute labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Attribute label for the locale `localeCode`"
              }
            }
          },
          "group": {
            "type": "string",
            "description": "Attribute group",
            "x-validation-rules": "It is the code of an existing group"
          },
          "group_labels": {
            "type": "object",
            "description": "Group labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "x-read-only": true,
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Group label for the locale `localeCode`"
              }
            }
          },
          "sort_order": {
            "type": "integer",
            "description": "Order of the attribute in its group",
            "x-validation-rules": "It is a positive integer",
            "default": 0
          },
          "localizable": {
            "type": "boolean",
            "description": "Whether the attribute is localizable, i.e. can have one value by locale",
            "default": false,
            "x-immutable": true
          },
          "scopable": {
            "type": "boolean",
            "description": "Whether the attribute is scopable, i.e. can have one value by channel",
            "default": false,
            "x-immutable": true
          },
          "available_locales": {
            "type": "array",
            "description": "To make the attribute locale specfic, specify here for which locales it is specific",
            "x-validation-rules": "Each string of the array is an existing and activated locale",
            "items": {
              "type": "string"
            }
          },
          "unique": {
            "type": "boolean",
            "description": "Whether two values for the attribute cannot be the same",
            "x-immutable": true
          },
          "useable_as_grid_filter": {
            "type": "boolean",
            "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
          },
          "max_characters": {
            "type": "integer",
            "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
            "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
          },
          "validation_rule": {
            "type": "string",
            "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
            "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
            "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
          },
          "validation_regexp": {
            "type": "string",
            "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
            "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
            "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
          },
          "wysiwyg_enabled": {
            "type": "boolean",
            "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
            "x-warning": "Only for `pim_catalog_textarea` attribute type"
          },
          "number_min": {
            "type": "string",
            "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
            "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
          },
          "number_max": {
            "type": "string",
            "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
            "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
          },
          "decimals_allowed": {
            "type": "boolean",
            "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
            "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
          },
          "negative_allowed": {
            "type": "boolean",
            "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
            "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
          },
          "metric_family": {
            "type": "string",
            "description": "Metric family when the attribute type is `pim_catalog_metric`",
            "x-immutable": true,
            "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
            "x-warning": "Only for `pim_catalog_metric` attribute type"
          },
          "default_metric_unit": {
            "type": "string",
            "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
            "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
            "x-warning": "Only for `pim_catalog_metric` attribute type"
          },
          "date_min": {
            "type": "string",
            "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
            "x-validation-rules": "The datetime format follows the ISO-8601 norm",
            "x-warning": "Only for `pim_catalog_date` attribute type",
            "format": "date-time"
          },
          "date_max": {
            "type": "string",
            "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
            "x-validation-rules": "The datetime format follows the ISO-8601 norm",
            "x-warning": "Only for `pim_catalog_date` attribute type",
            "format": "date-time"
          },
          "allowed_extensions": {
            "type": "array",
            "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
            "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types",
            "items": {
              "type": "string"
            }
          },
          "max_file_size": {
            "type": "string",
            "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
            "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
          },
          "reference_data_name": {
            "type": "string",
            "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
            "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
            "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
          }
        },
        "example": {
          "code": "release_date",
          "type": "pim_catalog_date",
          "group": "marketing",
          "group_labels": {
            "en_US": "Marketing",
            "fr_FR": "Marketing"
          },
          "unique": false,
          "useable_as_grid_filter": true,
          "allowed_extensions": [],
          "metric_family": null,
          "default_metric_unit": null,
          "reference_data_name": null,
          "available_locales": [],
          "max_characters": null,
          "validation_rule": null,
          "validation_regexp": null,
          "wysiwyg_enabled": null,
          "number_min": null,
          "number_max": null,
          "decimals_allowed": null,
          "negative_allowed": null,
          "date_min": "2017-06-28T08:00:00",
          "date_max": "2017-08-08T22:00:00",
          "max_file_size": null,
          "minimum_input_length": null,
          "sort_order": 1,
          "localizable": false,
          "scopable": false,
          "labels": {
            "en_US": "Sale date",
            "fr_FR": "Date des soldes"
          }
        }
      },
      "AttributeList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code",
              "type",
              "group"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute code",
                "x-immutable": true
              },
              "type": {
                "type": "string",
                "description": "Attribute type",
                "x-validation-rules": "The type is one of the following values",
                "enum": [
                  "pim_catalog_identifier",
                  "pim_catalog_metric",
                  "pim_catalog_number",
                  "pim_catalog_reference_data_multi_select",
                  "pim_catalog_reference_data_simple_select",
                  "pim_catalog_simpleselect",
                  "pim_catalog_multiselect",
                  "pim_catalog_date",
                  "pim_catalog_textarea",
                  "pim_catalog_text",
                  "pim_catalog_file",
                  "pim_catalog_image",
                  "pim_catalog_price_collection",
                  "pim_catalog_boolean",
                  "akeneo_reference_entity",
                  "akeneo_reference_entity_collection",
                  "pim_catalog_asset_collection"
                ],
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "description": "Attribute labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute label for the locale `localeCode`"
                  }
                }
              },
              "group": {
                "type": "string",
                "description": "Attribute group",
                "x-validation-rules": "It is the code of an existing group"
              },
              "group_labels": {
                "type": "object",
                "description": "Group labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "x-read-only": true,
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Group label for the locale `localeCode`"
                  }
                }
              },
              "sort_order": {
                "type": "integer",
                "description": "Order of the attribute in its group",
                "x-validation-rules": "It is a positive integer",
                "default": 0
              },
              "localizable": {
                "type": "boolean",
                "description": "Whether the attribute is localizable, i.e. can have one value by locale",
                "default": false,
                "x-immutable": true
              },
              "scopable": {
                "type": "boolean",
                "description": "Whether the attribute is scopable, i.e. can have one value by channel",
                "default": false,
                "x-immutable": true
              },
              "available_locales": {
                "type": "array",
                "description": "To make the attribute locale specfic, specify here for which locales it is specific",
                "x-validation-rules": "Each string of the array is an existing and activated locale",
                "items": {
                  "type": "string"
                }
              },
              "unique": {
                "type": "boolean",
                "description": "Whether two values for the attribute cannot be the same",
                "x-immutable": true
              },
              "useable_as_grid_filter": {
                "type": "boolean",
                "description": "Whether the attribute can be used as a filter for the product grid in the PIM user interface"
              },
              "max_characters": {
                "type": "integer",
                "description": "Number maximum of characters allowed for the value of the attribute when the attribute type is `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier`",
                "x-warning": "Only for `pim_catalog_text`, `pim_catalog_textarea` or `pim_catalog_identifier` attribute types"
              },
              "validation_rule": {
                "type": "string",
                "description": "Validation rule type used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                "x-validation-rules": "Equal to `regexp` when the attribute type is equal to `pim_catalog_identifier`",
                "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
              },
              "validation_regexp": {
                "type": "string",
                "description": "Regexp expression used to validate any attribute value when the attribute type is `pim_catalog_text` or `pim_catalog_identifier`",
                "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
                "x-warning": "Only for `pim_catalog_text` or `pim_catalog_identifier` attribute types"
              },
              "wysiwyg_enabled": {
                "type": "boolean",
                "description": "Whether the WYSIWYG interface is shown when the attribute type is `pim_catalog_textarea`",
                "x-warning": "Only for `pim_catalog_textarea` attribute type"
              },
              "number_min": {
                "type": "string",
                "description": "Minimum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
              },
              "number_max": {
                "type": "string",
                "description": "Maximum integer value allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
              },
              "decimals_allowed": {
                "type": "boolean",
                "description": "Whether decimals are allowed when the attribute type is `pim_catalog_metric`, `pim_catalog_price` or `pim_catalog_number`",
                "x-warning": "Only for `pim_catalog_metric`, `pim_catalog_price_collection` or `pim_catalog_number` attribute types"
              },
              "negative_allowed": {
                "type": "boolean",
                "description": "Whether negative values are allowed when the attribute type is `pim_catalog_metric` or `pim_catalog_number`",
                "x-warning": "Only for `pim_catalog_metric` or `pim_catalog_number` attribute types"
              },
              "metric_family": {
                "type": "string",
                "description": "Metric family when the attribute type is `pim_catalog_metric`",
                "x-immutable": true,
                "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                "x-warning": "Only for `pim_catalog_metric` attribute type"
              },
              "default_metric_unit": {
                "type": "string",
                "description": "Default metric unit when the attribute type is `pim_catalog_metric`",
                "x-validation-rules": "Required for `pim_catalog_metric` attribute type",
                "x-warning": "Only for `pim_catalog_metric` attribute type"
              },
              "date_min": {
                "type": "string",
                "description": "Minimum date allowed when the attribute type is `pim_catalog_date`",
                "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                "x-warning": "Only for `pim_catalog_date` attribute type",
                "format": "date-time"
              },
              "date_max": {
                "type": "string",
                "description": "Maximum date allowed when the attribute type is `pim_catalog_date`",
                "x-validation-rules": "The datetime format follows the ISO-8601 norm",
                "x-warning": "Only for `pim_catalog_date` attribute type",
                "format": "date-time"
              },
              "allowed_extensions": {
                "type": "array",
                "description": "Extensions allowed when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types",
                "items": {
                  "type": "string"
                }
              },
              "max_file_size": {
                "type": "string",
                "description": "Max file size in MB when the attribute type is `pim_catalog_file` or `pim_catalog_image`",
                "x-warning": "Only for `pim_catalog_file` or `pim_catalog_image` attribute types"
              },
              "reference_data_name": {
                "type": "string",
                "description": "Reference entity code when the attribute type is `akeneo_reference_entity` or `akeneo_reference_entity_collection` OR Asset family code when the attribute type is `pim_catalog_asset_collection`",
                "x-validation-rules": "Required only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types",
                "x-warning": "Only for `akeneo_reference_entity` or `akeneo_reference_entity_collection` or `pim_catalog_asset_collection` attribute types"
              }
            },
            "example": {
              "code": "release_date",
              "type": "pim_catalog_date",
              "group": "marketing",
              "group_labels": {
                "en_US": "Marketing",
                "fr_FR": "Marketing"
              },
              "unique": false,
              "useable_as_grid_filter": true,
              "allowed_extensions": [],
              "metric_family": null,
              "default_metric_unit": null,
              "reference_data_name": null,
              "available_locales": [],
              "max_characters": null,
              "validation_rule": null,
              "validation_regexp": null,
              "wysiwyg_enabled": null,
              "number_min": null,
              "number_max": null,
              "decimals_allowed": null,
              "negative_allowed": null,
              "date_min": "2017-06-28T08:00:00",
              "date_max": "2017-08-08T22:00:00",
              "max_file_size": null,
              "minimum_input_length": null,
              "sort_order": 1,
              "localizable": false,
              "scopable": false,
              "labels": {
                "en_US": "Sale date",
                "fr_FR": "Date des soldes"
              }
            }
          }
        ]
      },
      "AttributeOption": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of option"
          },
          "attribute": {
            "type": "string",
            "description": "Code of attribute related to the attribute option",
            "x-validation-rules": "It is the same attribute code as the one given as path parameter"
          },
          "sort_order": {
            "type": "integer",
            "description": "Order of attribute option",
            "x-validation-rules": "It is a positive integer"
          },
          "labels": {
            "type": "object",
            "description": "Attribute option labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Attribute option label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "black",
          "attribute": "a_simple_select",
          "sort_order": 2,
          "labels": {
            "en_US": "Black",
            "fr_FR": "Noir"
          }
        }
      },
      "AttributeOptionList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Code of option"
              },
              "attribute": {
                "type": "string",
                "description": "Code of attribute related to the attribute option",
                "x-validation-rules": "It is the same attribute code as the one given as path parameter"
              },
              "sort_order": {
                "type": "integer",
                "description": "Order of attribute option",
                "x-validation-rules": "It is a positive integer"
              },
              "labels": {
                "type": "object",
                "description": "Attribute option labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute option label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "black",
              "attribute": "a_simple_select",
              "sort_order": 2,
              "labels": {
                "en_US": "Black",
                "fr_FR": "Noir"
              }
            }
          }
        ]
      },
      "AttributeGroup": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute group code",
            "x-immutable": true
          },
          "sort_order": {
            "type": "integer",
            "description": "Attribute group order among other attribute groups",
            "x-validation-rules": "It is a positive integer",
            "default": 0
          },
          "attributes": {
            "type": "array",
            "description": "Attribute codes that compose the attribute group",
            "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "labels": {
            "type": "object",
            "description": "Attribute group labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Attribute group label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "marketing",
          "sort_order": 4,
          "attributes": [
            "sku",
            "name",
            "description",
            "response_time",
            "release_date",
            "price"
          ],
          "labels": {
            "en_US": "Marketing",
            "fr_FR": "Marketing"
          }
        }
      },
      "AttributeGroupList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Attribute group code",
                "x-immutable": true
              },
              "sort_order": {
                "type": "integer",
                "description": "Attribute group order among other attribute groups",
                "x-validation-rules": "It is a positive integer",
                "default": 0
              },
              "attributes": {
                "type": "array",
                "description": "Attribute codes that compose the attribute group",
                "x-validation-rules": "Each string of the array is an existing attribute code, an attribute can only be in one attribute group",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "labels": {
                "type": "object",
                "description": "Attribute group labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Attribute group label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "marketing",
              "sort_order": 4,
              "attributes": [
                "sku",
                "name",
                "description",
                "response_time",
                "release_date",
                "price"
              ],
              "labels": {
                "en_US": "Marketing",
                "fr_FR": "Marketing"
              }
            }
          }
        ]
      },
      "MediaFile": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "x-read-only": true,
                "properties": {
                  "download": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI to download the binaries of the media file"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Media file code",
                "x-immutable": true
              },
              "original_filename": {
                "type": "string",
                "description": "Original filename of the media file"
              },
              "mime_type": {
                "type": "string",
                "description": "Mime type of the media file",
                "x-read-only": true
              },
              "size": {
                "type": "integer",
                "description": "Size of the media file",
                "x-read-only": true
              },
              "extension": {
                "type": "string",
                "description": "Extension of the media file",
                "x-read-only": true
              }
            },
            "example": {
              "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
              "original_filename": "10806799-1356.jpg",
              "mime_type": "image/jpeg",
              "size": 16070,
              "extension": "jpg"
            }
          }
        ],
        "example": {
          "_links": {
            "download": {
              "href": "https://demo.akeneo.com/api/rest/v1/media-files/7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg/download"
            }
          },
          "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
          "original_filename": "10806799-1356.jpg",
          "mime_type": "image/jpeg",
          "size": 16070,
          "extension": "jpg"
        }
      },
      "MediaFileList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI to get the metadata of the media file"
                      }
                    }
                  },
                  "download": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI to download the binaries of the media file"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Media file code",
                "x-immutable": true
              },
              "original_filename": {
                "type": "string",
                "description": "Original filename of the media file"
              },
              "mime_type": {
                "type": "string",
                "description": "Mime type of the media file",
                "x-read-only": true
              },
              "size": {
                "type": "integer",
                "description": "Size of the media file",
                "x-read-only": true
              },
              "extension": {
                "type": "string",
                "description": "Extension of the media file",
                "x-read-only": true
              }
            },
            "example": {
              "code": "7/5/8/e/758e39d48ea7b42a55091434fd3d8b6cf3189b7f_10806799_1356.jpg",
              "original_filename": "10806799-1356.jpg",
              "mime_type": "image/jpeg",
              "size": 16070,
              "extension": "jpg"
            }
          }
        ]
      },
      "Locale": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Locale code",
            "x-immutable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the locale is enabled",
            "default": false
          }
        },
        "example": {
          "code": "en_US",
          "enable": true
        }
      },
      "LocaleList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Locale code",
                "x-immutable": true
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the locale is enabled",
                "default": false
              }
            },
            "example": {
              "code": "en_US",
              "enable": true
            }
          }
        ]
      },
      "Channel": {
        "type": "object",
        "required": [
          "code",
          "category_tree",
          "locales",
          "currencies"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Channel code",
            "x-immutable": true
          },
          "locales": {
            "type": "array",
            "description": "Codes of activated locales for the channel",
            "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array",
            "items": {
              "type": "string"
            }
          },
          "currencies": {
            "type": "array",
            "description": "Codes of activated currencies for the channel",
            "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array",
            "items": {
              "type": "string"
            }
          },
          "category_tree": {
            "type": "string",
            "description": "Code of the category tree linked to the channel",
            "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
          },
          "conversion_units": {
            "type": "object",
            "description": "Units to which the given metric attributes should be converted when exporting products",
            "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes.",
            "properties": {
              "attributeCode": {
                "type": "string",
                "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
              }
            }
          },
          "labels": {
            "type": "object",
            "description": "Channel labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Channel label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "ecommerce",
          "currencies": [
            "USD",
            "EUR"
          ],
          "locales": [
            "de_DE",
            "en_US",
            "fr_FR"
          ],
          "category_tree": "master",
          "conversion_units": {
            "weight": "KILOGRAM"
          },
          "labels": {
            "en_US": "Ecommerce",
            "de_DE": "Ecommerce",
            "fr_FR": "Ecommerce"
          }
        }
      },
      "ChannelList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code",
              "category_tree",
              "locales",
              "currencies"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Channel code",
                "x-immutable": true
              },
              "locales": {
                "type": "array",
                "description": "Codes of activated locales for the channel",
                "x-validation-rules": "&bull; Each string of the array is an existing locale code &#10;&bull; At least one locale in the array",
                "items": {
                  "type": "string"
                }
              },
              "currencies": {
                "type": "array",
                "description": "Codes of activated currencies for the channel",
                "x-validation-rules": "&bull; Each string of the array is an existing currency code &#10;&bull; At least one currency in the array",
                "items": {
                  "type": "string"
                }
              },
              "category_tree": {
                "type": "string",
                "description": "Code of the category tree linked to the channel",
                "x-validation-rules": "It is the code of an existing category code that is a tree (a category without parent)"
              },
              "conversion_units": {
                "type": "object",
                "description": "Units to which the given metric attributes should be converted when exporting products",
                "x-validation-rules": "&bull; The `attributeCode` is the code of an existing attribute whose type is `pim_catalog_metric` &#10;&bull; The strings are existing unit codes.",
                "properties": {
                  "attributeCode": {
                    "type": "string",
                    "description": "Conversion unit code used to convert the values of the attribute `attributeCode` when exporting via the channel"
                  }
                }
              },
              "labels": {
                "type": "object",
                "description": "Channel labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Channel label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "ecommerce",
              "currencies": [
                "USD",
                "EUR"
              ],
              "locales": [
                "de_DE",
                "en_US",
                "fr_FR"
              ],
              "category_tree": "master",
              "conversion_units": {
                "weight": "KILOGRAM"
              },
              "labels": {
                "en_US": "Ecommerce",
                "de_DE": "Ecommerce",
                "fr_FR": "Ecommerce"
              }
            }
          }
        ]
      },
      "AssociationType": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Association type code",
            "x-immutable": true
          },
          "labels": {
            "type": "object",
            "description": "Association type labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "Association type label for the locale `localeCode`"
              }
            }
          },
          "is_quantified": {
            "type": "boolean",
            "description": "When true, the association is a quantified association",
            "default": false,
            "x-immutable": true
          },
          "is_two_way": {
            "type": "boolean",
            "description": "When true, the association is a two-way association",
            "default": false,
            "x-immutable": true
          }
        },
        "example": {
          "code": "upsell",
          "labels": {
            "en_US": "Upsell",
            "fr_FR": "Vente incitative"
          },
          "is_quantified": false,
          "is_two_way": false
        }
      },
      "AssociationTypeList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Association type code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "description": "Association type labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Association type label for the locale `localeCode`"
                  }
                }
              },
              "is_quantified": {
                "type": "boolean",
                "description": "When true, the association is a quantified association",
                "default": false,
                "x-immutable": true
              },
              "is_two_way": {
                "type": "boolean",
                "description": "When true, the association is a two-way association",
                "default": false,
                "x-immutable": true
              }
            },
            "example": {
              "code": "upsell",
              "labels": {
                "en_US": "Upsell",
                "fr_FR": "Vente incitative"
              },
              "is_quantified": false,
              "is_two_way": false
            }
          }
        ]
      },
      "Currency": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Currency code",
            "x-immutable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the currency is enabled"
          }
        },
        "example": {
          "code": "EUR",
          "enabled": true
        }
      },
      "CurrencyList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Currency code",
                "x-immutable": true
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether the currency is enabled"
              }
            },
            "example": {
              "code": "EUR",
              "enabled": true
            }
          }
        ]
      },
      "AssetFamilyList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Asset family code",
                "x-immutable": true
              },
              "labels": {
                "type": "object",
                "description": "Asset family labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "Asset family label for the locale `localeCode`"
                  }
                }
              },
              "attribute_as_main_media": {
                "type": "string",
                "description": "Attribute code that is used as the main media of the asset family.",
                "x-validation-rules": "It should be the code of an attribute that belongs to this family, and it must be a media file or a media link attribute type.",
                "default": "First media file or media link attribute that was created"
              },
              "naming_convention": {
                "type": "object",
                "description": "The naming convention ran over the asset code or the main media filename upon each asset creation, in order to automatically set several values in asset attributes. To learn more and see the format of this property, take a look at <a href='/concepts/asset-manager.html#focus-on-the-naming-convention'>here</a>.",
                "x-validation-rules": "To know more about the validation of this property, take a look at our naming convention format.",
                "default": {},
                "properties": {
                  "source": {
                    "type": "object",
                    "description": "The string on which the naming convention should be applied. More details <a href='/concepts/asset-manager.html#source'>here</a>."
                  },
                  "pattern": {
                    "type": "string",
                    "description": "The regular expression that should be applied on the source. More details <a href='/concepts/asset-manager.html#pattern'>here</a>."
                  },
                  "abort_asset_creation_on_error": {
                    "type": "boolean",
                    "description": "Whether the asset should be created if the naming convention failed to apply. More details <a href='/concepts/asset-manager.html#abort-asset-creation-on-error'>here</a>."
                  }
                }
              },
              "product_link_rules": {
                "type": "array",
                "description": "The rules that will be run after the asset creation, in order to automatically link the assets of this family to a set of products. To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-product-link-rule'>here</a>.",
                "x-validation-rules": "To know more about the validation of this property, take a look at our product link rule format.",
                "default": {},
                "items": {
                  "type": "object",
                  "properties": {
                    "product_selections": {
                      "type": "array",
                      "description": "The product selection to which the assets of the asset family to be automatically linked. More details <a href='/concepts/asset-manager.html#product-selection'>here</a>.",
                      "items": {
                        "type": "object",
                        "required": [
                          "field",
                          "operator",
                          "value"
                        ],
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "channel": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "assign_assets_to": {
                      "type": "array",
                      "description": "The product value in which your assets will be assigned. More details <a href='/concepts/asset-manager.html#product-value-assignment'>here</a>.",
                      "items": {
                        "type": "object",
                        "required": [
                          "attribute",
                          "mode"
                        ],
                        "properties": {
                          "attribute": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "channel": {
                            "type": "string"
                          },
                          "mode": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "transformations": {
                "type": "array",
                "description": "The transformations to perform on source files in order to generate new files into your asset attributes (only available since v4.0). To understand the format of this property, see <a href='/concepts/asset-manager.html#focus-on-the-transformations'>here</a>.",
                "x-validation-rules": "To know more about the validation of this property, take a look at our transformation format.",
                "default": {},
                "items": {
                  "type": "object",
                  "required": [
                    "label",
                    "target",
                    "source",
                    "operations"
                  ],
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "The name of the transformation"
                    },
                    "filename_suffix": {
                      "type": "string",
                      "description": "The suffix that will be appended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                    },
                    "filename_prefix": {
                      "type": "string",
                      "description": "The prefix that will be prepended to the source filename to generate the target filename. More details <a href='/concepts/asset-manager.html#target-filename'>here</a>."
                    },
                    "source": {
                      "type": "object",
                      "required": [
                        "attribute",
                        "channel",
                        "locale"
                      ],
                      "description": "The attribute value in which is stored the media file you want to use as the source file for your transformation. More details <a href='/concepts/asset-manager.html#source-file'>here</a>.",
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "channel": {
                          "type": "string"
                        },
                        "locale": {
                          "type": "string"
                        }
                      }
                    },
                    "target": {
                      "type": "object",
                      "required": [
                        "attribute",
                        "channel",
                        "locale"
                      ],
                      "description": "The attribute value in which the PIM will generate the new transformed file, aka the target file. More details <a href='/concepts/asset-manager.html#target-file'>here</a>.",
                      "properties": {
                        "attribute": {
                          "type": "string"
                        },
                        "channel": {
                          "type": "string"
                        },
                        "locale": {
                          "type": "string"
                        }
                      }
                    },
                    "operations": {
                      "type": "object",
                      "description": "The transformations that should be applied to your source file to generate the target file. More details <a href='/concepts/asset-manager.html#transformation-operations'>here</a>.",
                      "x-validation-rules": "Should contain at least one operation",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "parameters": {
                          "type": "object",
                          "properties": {
                            "colorspace": {
                              "type": "string"
                            },
                            "width": {
                              "type": "integer"
                            },
                            "height": {
                              "type": "integer"
                            },
                            "ratio": {
                              "type": "integer"
                            },
                            "resolution-unit": {
                              "type": "string"
                            },
                            "resolution-x": {
                              "type": "integer"
                            },
                            "resolution-y": {
                              "type": "integer"
                            },
                            "quality": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "code": "model_pictures",
              "labels": {
                "en_US": "Model pictures",
                "fr_FR": "Photographies en pied"
              },
              "attribute_as_main_media": "main_image",
              "naming_convention": {
                "source": {
                  "property": "code",
                  "channel": null,
                  "locale": null
                },
                "pattern": "/(?P<product_ref>.*)-.*/",
                "abort_asset_creation_on_error": true
              },
              "product_link_rules": [
                {
                  "product_selections": [
                    {
                      "field": "sku",
                      "operator": "EQUALS",
                      "value": "{{product_ref}}"
                    }
                  ],
                  "assign_assets_to": [
                    {
                      "attribute": "model_pictures",
                      "mode": "replace"
                    }
                  ]
                }
              ],
              "transformations": [
                {
                  "label": "Thumbnail plus black and white transformation",
                  "filename_suffix": "_thumbnailBW",
                  "source": {
                    "attribute": "main_image",
                    "channel": null,
                    "locale": null
                  },
                  "target": {
                    "attribute": "thumbnail",
                    "channel": null,
                    "locale": null
                  },
                  "operations": [
                    {
                      "type": "thumbnail",
                      "parameters": {
                        "width": 150,
                        "height": 150
                      }
                    },
                    {
                      "type": "colorspace",
                      "parameters": {
                        "colorspace": "grey"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "AssetFamilyItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "AssetAttributeList": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "code",
            "type",
            "media_type"
          ],
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
              "default": {},
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              }
            },
            "type": {
              "type": "string",
              "description": "Attribute type",
              "enum": [
                "text",
                "media_link",
                "number",
                "media_file",
                "single_option",
                "multiple_options",
                "reference_entity_single_link",
                "reference_entity_multiple_links"
              ],
              "x-immutable": true
            },
            "value_per_locale": {
              "type": "boolean",
              "description": "Whether the attribute is localizable, i.e. can have one value by locale",
              "default": false,
              "x-immutable": true
            },
            "value_per_channel": {
              "type": "boolean",
              "description": "Whether the attribute is scopable, i.e. can have one value by channel",
              "default": false,
              "x-immutable": true
            },
            "is_required_for_completeness": {
              "type": "boolean",
              "description": "Whether the attribute should be part of the record's completeness calculation",
              "default": false
            },
            "is_read_only": {
              "type": "boolean",
              "description": "Whether the attribute should be in read only mode only in the UI, but you can still update it with the API",
              "default": false
            },
            "max_characters": {
              "type": "integer",
              "description": "Maximum number of characters allowed for the value of the attribute when the attribute type is `text`",
              "x-warning": "Only for `text` attribute type"
            },
            "is_textarea": {
              "type": "boolean",
              "description": "Whether the UI should display a text area instead of a simple field when the attribute type is `text`",
              "default": false,
              "x-warning": "Only for `text` attribute type"
            },
            "is_rich_text_editor": {
              "type": "boolean",
              "description": "Whether the UI should display a rich text editor instead of a simple text area when the attribute type is `text`",
              "x-validation-rules": "Required when the property `is_textarea` is equal to `true`",
              "x-warning": "Only for `text` attribute type"
            },
            "validation_rule": {
              "type": "string",
              "description": "Validation rule type used to validate the attribute value when the attribute type is `text`",
              "default": "none",
              "x-warning": "Only for `text` attribute type",
              "enum": [
                "email",
                "url",
                "regexp",
                "none"
              ]
            },
            "validation_regexp": {
              "type": "string",
              "description": "Regexp expression used to validate the attribute value when the attribute type is `text`",
              "default": null,
              "x-validation-rules": "Required when the property `validation_rule` is equal to `regexp`",
              "x-warning": "Only for `text` attribute type"
            },
            "allowed_extensions": {
              "type": "array",
              "description": "Extensions allowed when the attribute type is `media_file`",
              "default": [],
              "x-warning": "Only for `media_file` attribute type",
              "items": {
                "type": "string"
              }
            },
            "max_file_size": {
              "type": "string",
              "description": "Max file size in MB when the attribute type is `media_file`",
              "default": null,
              "x-warning": "Only for `media_file` attribute type"
            },
            "decimals_allowed": {
              "type": "boolean",
              "description": "Whether decimals are allowed when the attribute type is `number`",
              "default": false,
              "x-warning": "Only for `number` attribute type"
            },
            "min_value": {
              "type": "string",
              "description": "Minimum value allowed when the attribute type is `number`",
              "default": null,
              "x-validation-rules": "The minimum value must be lower than the maximum value",
              "x-warning": "Only for `number` attribute type"
            },
            "max_value": {
              "type": "string",
              "description": "Maximum value allowed when the attribute type is `number`",
              "default": null,
              "x-validation-rules": "The maximum value must be greater than the minimum value",
              "x-warning": "Only for `number` attribute type"
            },
            "media_type": {
              "type": "string",
              "description": "For the `media_link` attribute type, it is the type of the media behind the url, to allow its preview in the PIM. For the `media_file` attribute type, it is the type of the file.",
              "enum": [
                "image",
                "pdf",
                "youtube",
                "vimeo",
                "other"
              ],
              "x-warning": "Only required for `media_link` and `media_file` attribute types"
            },
            "prefix": {
              "type": "string",
              "description": "Prefix of the `media_link` attribute type. The common url root that prefixes the link to the media",
              "default": null,
              "x-warning": "Only for `media_link` attribute type"
            },
            "suffix": {
              "type": "string",
              "description": "Suffix of the `media_link` attribute type. The common url suffix for the media",
              "default": null,
              "x-warning": "Only for `media_link` attribute type"
            }
          },
          "example": {
            "code": "model_is_wearing_size",
            "labels": {
              "en_US": "Model is wearing size",
              "fr_FR": "Le mannequin porte la taille"
            },
            "type": "single_option",
            "value_per_locale": false,
            "value_per_channel": false,
            "is_required_for_completeness": true
          }
        }
      },
      "AssetAttributeOptionList": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "type": "string",
              "description": "Attribute's option code",
              "x-immutable": true
            },
            "labels": {
              "type": "object",
              "description": "Attribute labels for each locale",
              "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
              "default": {},
              "properties": {
                "localeCode": {
                  "type": "string",
                  "description": "Attribute label for the locale `localeCode`"
                }
              }
            }
          },
          "example": {
            "code": "small",
            "labels": {
              "en_US": "S",
              "fr_FR": "S"
            }
          }
        }
      },
      "AssetList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Code of the asset",
                "x-immutable": true
              },
              "values": {
                "type": "object",
                "description": "Asset attributes values, see the <a href='/concepts/asset-manager.html#focus-on-the-asset-values'>Focus on the asset values</a> section for more details.",
                "x-validation-rules": "Validation rules detailed in Asset attribute values section",
                "properties": {
                  "attributeCode": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "string",
                          "description": "Channel code of the asset attribute value"
                        },
                        "locale": {
                          "type": "string",
                          "description": "Locale code of the asset attribute value"
                        },
                        "data": {
                          "type": "object",
                          "description": "Asset attribute value"
                        }
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "code": "sku_54628_picture1",
              "values": {
                "media_preview": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "sku_54628_picture1.jpg"
                  }
                ],
                "model_wears_size": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "s"
                  }
                ],
                "photographer": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "ben_levy"
                  }
                ],
                "main_colors": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": [
                      "red",
                      "purple"
                    ]
                  }
                ],
                "end_of_use_date": [
                  {
                    "locale": null,
                    "channel": null,
                    "data": "02/03/2021"
                  }
                ]
              }
            }
          }
        ]
      },
      "AssetItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "message": {
            "type": "string",
            "description": "Message explaining the error"
          }
        }
      },
      "ErrorByLine": {
        "type": "object",
        "properties": {
          "line": {
            "type": "integer",
            "description": "Line number"
          },
          "identifier": {
            "type": "string",
            "description": "Resource identifier, only filled when the resource is a product"
          },
          "code": {
            "type": "string",
            "description": "Resource code, only filled when the resource is not a product"
          },
          "status_code": {
            "type": "integer",
            "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
          },
          "message": {
            "type": "string",
            "description": "Message explaining the error"
          }
        }
      },
      "ErrorByObject": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Resource code"
            },
            "status_code": {
              "type": "integer",
              "description": "HTTP status code, see <a href=\"/documentation/responses.html#client-errors\">Client errors</a> to understand the meaning of each code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the current page of resources"
                  }
                }
              },
              "first": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the first page of resources"
                  }
                }
              },
              "previous": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the previous page of resources"
                  }
                }
              },
              "next": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the next page of resources"
                  }
                }
              }
            }
          },
          "current_page": {
            "type": "integer",
            "description": "Current page number"
          }
        }
      },
      "SearchAfterPagination": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the current page of resources"
                  }
                }
              },
              "first": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the first page of resources"
                  }
                }
              },
              "next": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the next page of resources"
                  }
                }
              }
            }
          }
        }
      },
      "ItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "MediaFileItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI to get the metadata of the media file"
                  }
                }
              },
              "download": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI to download the binaries of the media file"
                  }
                }
              }
            }
          }
        }
      },
      "ReferenceEntityItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the resource"
                  }
                }
              },
              "image_download": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI to download the binaries of the reference entity image file"
                  }
                }
              }
            }
          }
        }
      },
      "ReferenceEntityRecordItemList": {
        "type": "object",
        "properties": {
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI of the resource"
                  }
                }
              }
            }
          }
        }
      },
      "DeprecatedAsset": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "PAM asset code",
            "x-immutable": true
          },
          "categories": {
            "type": "array",
            "description": "Codes of the PAM asset categories in which the asset is classified",
            "x-validation-rules": "Each string of the array is equal to an existing asset category code",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "description": {
            "type": "string",
            "description": "Description of the PAM asset",
            "default": null
          },
          "localizable": {
            "type": "boolean",
            "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
            "default": false,
            "x-immutable": true
          },
          "tags": {
            "type": "array",
            "description": "Tags of the PAM asset",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "end_of_use": {
            "type": "string",
            "description": "Date on which the PAM asset expire",
            "format": "dateTime",
            "default": null,
            "x-validation-rules": "The date follows the ISO 8601 format"
          },
          "variation_files": {
            "type": "array",
            "description": "Variations of the PAM asset",
            "x-read-only": true,
            "items": {
              "type": "object",
              "properties": {
                "_link": {
                  "type": "object",
                  "description": "Links to get and download the variation file",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the variation entity"
                        }
                      }
                    },
                    "download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the variation file"
                        }
                      }
                    }
                  }
                },
                "locale": {
                  "type": "string",
                  "description": "Locale code of the variation"
                },
                "scope": {
                  "type": "string",
                  "description": "Channel code of the variation"
                },
                "code": {
                  "type": "string",
                  "description": "Code of the variation"
                }
              }
            }
          },
          "reference_files": {
            "type": "array",
            "description": "Reference files of the PAM asset",
            "x-read-only": true,
            "items": {
              "type": "object",
              "properties": {
                "_link": {
                  "type": "object",
                  "description": "Links to get and download the reference file",
                  "properties": {
                    "self": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI of the reference file entity"
                        }
                      }
                    },
                    "download": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string",
                          "description": "URI to download the reference file"
                        }
                      }
                    }
                  }
                },
                "locale": {
                  "type": "string",
                  "description": "Locale code of the reference file"
                },
                "code": {
                  "type": "string",
                  "description": "Code of the reference file"
                }
              }
            }
          }
        },
        "example": {
          "code": "tshirt_artemis_main_picture",
          "categories": [
            "tshirts_assets"
          ],
          "description": "The main picture of the Artemis t-shirt",
          "localizable": false,
          "tags": [
            "tshirts",
            "red",
            "summer"
          ],
          "end_of_use": "2019-09-01T00:00:00+0200",
          "variation_files": [
            {
              "_link": {
                "download": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                },
                "self": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                }
              },
              "locale": null,
              "scope": "e_commerce",
              "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
            },
            {
              "_link": {
                "download": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                },
                "self": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                }
              },
              "locale": null,
              "scope": "print",
              "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
            }
          ],
          "reference_files": [
            {
              "_link": {
                "download": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                },
                "self": {
                  "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                }
              },
              "locale": null,
              "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
            }
          ]
        }
      },
      "DeprecatedAssetList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "PAM asset code",
                "x-immutable": true
              },
              "categories": {
                "type": "array",
                "description": "Codes of the PAM asset categories in which the asset is classified",
                "x-validation-rules": "Each string of the array is equal to an existing asset category code",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "description": {
                "type": "string",
                "description": "Description of the PAM asset",
                "default": null
              },
              "localizable": {
                "type": "boolean",
                "description": "Whether the asset is localized or not, meaning if you want to have different reference files for each of your locale",
                "default": false,
                "x-immutable": true
              },
              "tags": {
                "type": "array",
                "description": "Tags of the PAM asset",
                "items": {
                  "type": "string"
                },
                "default": []
              },
              "end_of_use": {
                "type": "string",
                "description": "Date on which the PAM asset expire",
                "format": "dateTime",
                "default": null,
                "x-validation-rules": "The date follows the ISO 8601 format"
              },
              "variation_files": {
                "type": "array",
                "description": "Variations of the PAM asset",
                "x-read-only": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "_link": {
                      "type": "object",
                      "description": "Links to get and download the variation file",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "URI of the variation entity"
                            }
                          }
                        },
                        "download": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "URI to download the variation file"
                            }
                          }
                        }
                      }
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the variation"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Channel code of the variation"
                    },
                    "code": {
                      "type": "string",
                      "description": "Code of the variation"
                    }
                  }
                }
              },
              "reference_files": {
                "type": "array",
                "description": "Reference files of the PAM asset",
                "x-read-only": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "_link": {
                      "type": "object",
                      "description": "Links to get and download the reference file",
                      "properties": {
                        "self": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "URI of the reference file entity"
                            }
                          }
                        },
                        "download": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "URI to download the reference file"
                            }
                          }
                        }
                      }
                    },
                    "locale": {
                      "type": "string",
                      "description": "Locale code of the reference file"
                    },
                    "code": {
                      "type": "string",
                      "description": "Code of the reference file"
                    }
                  }
                }
              }
            },
            "example": {
              "code": "tshirt_artemis_main_picture",
              "categories": [
                "tshirts_assets"
              ],
              "description": "The main picture of the Artemis t-shirt",
              "localizable": false,
              "tags": [
                "tshirts",
                "red",
                "summer"
              ],
              "end_of_use": "2019-09-01T00:00:00+0200",
              "variation_files": [
                {
                  "_link": {
                    "download": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
                    },
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale"
                    }
                  },
                  "locale": null,
                  "scope": "e_commerce",
                  "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg"
                },
                {
                  "_link": {
                    "download": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale/download"
                    },
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/print/no_locale"
                    }
                  },
                  "locale": null,
                  "scope": "print",
                  "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_print.jpg"
                }
              ],
              "reference_files": [
                {
                  "_link": {
                    "download": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
                    },
                    "self": {
                      "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale"
                    }
                  },
                  "locale": null,
                  "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg"
                }
              ]
            }
          }
        ]
      },
      "DeprecatedAssetReferenceFile": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the PAM asset reference file",
            "x-immutable": true
          },
          "locale": {
            "type": "string",
            "description": "Locale of the PAM asset reference file, equal to `null` if the asset is not localizable"
          },
          "_link": {
            "type": "object",
            "description": "Links to get and download the reference file",
            "properties": {
              "download": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI to download the reference file"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg",
          "locale": null,
          "_link": {
            "download": {
              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"
            }
          }
        }
      },
      "DeprecatedAssetVariationFile": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of the PAM asset variation file",
            "x-immutable": true
          },
          "locale": {
            "type": "string",
            "description": "Locale of the PAM asset variation file, equal to `null` if the asset is not localizable"
          },
          "scope": {
            "type": "string",
            "description": "Channel of the PAM asset variation file"
          },
          "_link": {
            "type": "object",
            "description": "Links to get and download the reference file",
            "properties": {
              "download": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "description": "URI to download the variation file"
                  }
                }
              }
            }
          }
        },
        "example": {
          "code": "7/5/8/e/758e39d48va7b42a55001434fd3d7b6cf3189b7f_tshirt_artemis_main_picture_ecommerce.jpg",
          "locale": null,
          "scope": "ecommerce",
          "_link": {
            "download": {
              "href": "https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/variation-files/ecommerce/no_locale/download"
            }
          }
        }
      },
      "DeprecatedAssetCategory": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "PAM asset category code",
            "x-immutable": true
          },
          "parent": {
            "type": "string",
            "description": "PAM ssset category code of the parent's asset category",
            "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself.",
            "default": "null"
          },
          "labels": {
            "type": "object",
            "description": "PAM asset category labels for each locale",
            "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
            "default": {},
            "properties": {
              "localeCode": {
                "type": "string",
                "description": "PAM asset category label for the locale `localeCode`"
              }
            }
          }
        },
        "example": {
          "code": "front_views",
          "parent": "pictures",
          "labels": {
            "en_US": "Front views",
            "fr_FR": "Vues de face"
          }
        }
      },
      "DeprecatedAssetCategoryList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "PAM asset category code",
                "x-immutable": true
              },
              "parent": {
                "type": "string",
                "description": "PAM ssset category code of the parent's asset category",
                "x-validation-rules": "&bull; It is either equal to `null` or to an existing asset category code. &#10;&bull; If equal to an existing asset category code, it cannot reference itself.",
                "default": "null"
              },
              "labels": {
                "type": "object",
                "description": "PAM asset category labels for each locale",
                "x-validation-rules": "The `localeCode` is the code of an existing and activated locale",
                "default": {},
                "properties": {
                  "localeCode": {
                    "type": "string",
                    "description": "PAM asset category label for the locale `localeCode`"
                  }
                }
              }
            },
            "example": {
              "code": "front_views",
              "parent": "pictures",
              "labels": {
                "en_US": "Front views",
                "fr_FR": "Vues de face"
              }
            }
          }
        ]
      },
      "DeprecatedAssetTag": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "PAM asset tag code",
            "x-immutable": true
          }
        },
        "example": {
          "code": "tshirt"
        }
      },
      "DeprecatedAssetTagList": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "URI of the resource"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "PAM asset tag code",
                "x-immutable": true
              }
            },
            "example": {
              "code": "tshirt"
            }
          }
        ]
      },
      "DeprecatedAssetReferenceFileUploadWarning": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message explaining the warning"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "string",
                  "description": "Channel for which the variation file generation failed"
                },
                "locale": {
                  "type": "string",
                  "description": "Locale for which the variation file generation failed"
                },
                "message": {
                  "type": "string",
                  "description": "Message explaining why the variation file generation failed"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "Created": {
        "description": "Created",
        "x-details": "Means that the creation was successful",
        "headers": {
          "Location": {
            "description": "URI of the created resource",
            "type": "string"
          }
        }
      },
      "ReferenceEntityMediaFileUploaded": {
        "description": "Created",
        "x-details": "Means that the media file creation was successful",
        "headers": {
          "Location": {
            "description": "URI of the created resource",
            "type": "string"
          },
          "Reference-entities-media-file-code": {
            "description": "Code of the media file",
            "type": "string"
          }
        }
      },
      "AssetMediaFileUploaded": {
        "description": "Created",
        "x-details": "Means that the media file creation was successful",
        "headers": {
          "Location": {
            "description": "URI of the created resource",
            "type": "string"
          },
          "Asset-media-file-code": {
            "description": "Code of the media file",
            "type": "string"
          }
        }
      },
      "Submitted": {
        "description": "Submitted",
        "x-details": "Means that the draft submission was successful",
        "headers": {
          "Location": {
            "description": "URI of the created resource",
            "type": "string"
          }
        }
      },
      "NoContent": {
        "description": "No content to return",
        "x-details": "Means that the update was successful",
        "headers": {
          "Location": {
            "description": "URI of the updated resource",
            "type": "string"
          }
        }
      },
      "400Error": {
        "description": "Bad request",
        "x-details": "Can be caused by a malformed JSON request",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 400,
          "message": "Invalid JSON message received"
        }
      },
      "401Error": {
        "description": "Authentication required",
        "x-details": "Can be caused by a missing or expired token",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 401,
          "message": "Authentication is required"
        }
      },
      "403Error": {
        "description": "Access forbidden",
        "x-details": "The user does not have the permission to execute this request",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 403,
          "message": "Access forbidden. You are not allowed to list categories."
        }
      },
      "404Error": {
        "description": "Resource not found",
        "x-details": "The resource code given in the URI does not correspond to any existing PIM resource",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 404,
          "message": "Resource `my_resource_code` does not exist."
        }
      },
      "406Error": {
        "description": "Not Acceptable",
        "x-details": "The `Accept` header is not `application/json` but it should",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 406,
          "message": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
        }
      },
      "413Error": {
        "description": "Request Entity Too Large",
        "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 413,
          "message": "Too many resources to process, 100 is the maximum allowed."
        }
      },
      "415Error": {
        "description": "Unsupported Media type",
        "x-details": "The `Content-type` header has to be `application/json`",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 415,
          "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/json’ is allowed."
        }
      },
      "415ErrorStream": {
        "description": "Unsupported Media type",
        "x-details": "The `Content-type` header has to be `application/vnd.akeneo.collection+json`",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 415,
          "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
        }
      },
      "415ErrorMultipart": {
        "description": "Unsupported Media type",
        "x-details": "The `Content-type` header has to be `multipart/form-data`",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 415,
          "message": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘multipart/form-data’ is allowed."
        }
      },
      "422Error": {
        "description": "Unprocessable entity",
        "x-details": "The validation of the entity given in the body of the request failed",
        "schema": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "message": {
              "type": "string",
              "description": "Message explaining the error"
            }
          }
        },
        "examples": {
          "code": 422,
          "message": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation.",
          "_links": {
            "documentation": {
              "href": "http://api.akeneo.com/api-reference.html"
            }
          }
        }
      },
      "DeprecatedAssetReferenceFileUploaded": {
        "description": "Uploaded",
        "x-details": "Means that the reference file upload was successful. Beware that even if the reference file upload is complete, some variation files generations could have failed. If so, you will see a warning message in the response body.",
        "headers": {
          "Location": {
            "description": "URI of the created resource",
            "type": "string"
          }
        },
        "x-no-entity": true,
        "schema": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Message explaining the warning"
            },
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "channel": {
                    "type": "string",
                    "description": "Channel for which the variation file generation failed"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale for which the variation file generation failed"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message explaining why the variation file generation failed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "pagination_type": {
        "name": "pagination_type",
        "in": "query",
        "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "required": false,
        "type": "string",
        "default": "page",
        "x-validation-rules": "One of the following values",
        "enum": [
          "page",
          "search_after"
        ]
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section",
        "required": false,
        "type": "integer",
        "default": 1
      },
      "search_after": {
        "name": "search_after",
        "in": "query",
        "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "required": false,
        "type": "string",
        "default": "cursor to the first page"
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section",
        "required": false,
        "type": "integer",
        "minimum": 1,
        "maximum": 100,
        "default": 10
      },
      "code": {
        "name": "code",
        "in": "path",
        "description": "Code of the resource",
        "required": true,
        "type": "string"
      },
      "reference_entity_code": {
        "name": "reference_entity_code",
        "in": "path",
        "description": "Code of the reference entity",
        "required": true,
        "type": "string"
      },
      "asset_family_code": {
        "name": "asset_family_code",
        "in": "path",
        "description": "Code of the asset family",
        "required": true,
        "type": "string"
      },
      "attribute_code": {
        "name": "attribute_code",
        "in": "path",
        "description": "Code of the attribute",
        "required": true,
        "type": "string"
      },
      "asset_code": {
        "name": "asset_code",
        "in": "path",
        "description": "Code of the asset",
        "required": true,
        "type": "string"
      },
      "channel_code": {
        "name": "channel_code",
        "in": "path",
        "description": "Code of the channel",
        "required": true,
        "type": "string"
      },
      "locale_code": {
        "name": "locale_code",
        "in": "path",
        "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable",
        "required": true,
        "type": "string"
      },
      "family_code": {
        "name": "family_code",
        "in": "path",
        "description": "Code of the family",
        "required": true,
        "type": "string"
      },
      "with_count": {
        "name": "with_count",
        "in": "query",
        "description": "Return the count of products in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way",
        "default": false,
        "type": "boolean",
        "required": false
      },
      "with_attribute_options": {
        "name": "with_attribute_options",
        "in": "query",
        "description": "Return labels of attribute options in the response. (Only available in the PIM Serenity version.)",
        "default": false,
        "type": "boolean",
        "required": false
      },
      "with_quality_scores": {
        "name": "with_quality_scores",
        "in": "query",
        "description": "Return product's quality scores in the response.",
        "default": false,
        "type": "boolean",
        "required": false
      }
    }
  }
